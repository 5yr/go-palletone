<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.6.7 on linux)" generated="20190319 01:53:00.806" rpa="false">
<suite id="s1" name="DepositContractTest" source="/home/zhichunqi/gowork/src/github.com/palletone/go-palletone/test/dct/deposit_test_cases/DepositContractTest.robot">
<test id="s1-t1" name="Business_01">
<kw name="applyBecomeMediator" library="applyBecomeMediatorParams">
<arguments>
<arg>${mediatorAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="申请加入Mediator候选节点所需参数" library="applyBecomeMediatorParams">
<arguments>
<arg>${mediatorAddr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>ApplyBecomeMediator</arg>
<arg>{\"key\":\"value\"}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:01.024" level="INFO">${one} = ['ApplyBecomeMediator', '{"key":"value"}']</msg>
<status status="PASS" starttime="20190319 01:53:01.024" endtime="20190319 01:53:01.024"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:01.025" level="INFO">${two} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', '1000000000', '1000000000', ['ApplyBecomeMediator', '{"key":"value"}']]</msg>
<status status="PASS" starttime="20190319 01:53:01.024" endtime="20190319 01:53:01.025"></status>
</kw>
<msg timestamp="20190319 01:53:01.025" level="INFO">${params} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', '1000000000', '1000000000', ['ApplyBecomeMediator', '{"key":"value"}']]</msg>
<status status="PASS" starttime="20190319 01:53:01.023" endtime="20190319 01:53:01.025"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>ApplyBecomeMediator</arg>
<arg>${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:01.027" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:01.026" endtime="20190319 01:53:01.027"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:01.028" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', '1000000000', '1000000000', ['ApplyBecomeMediator', '...</msg>
<status status="PASS" starttime="20190319 01:53:01.028" endtime="20190319 01:53:01.028"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:01.029" level="INFO">Creating Session using : alias=ApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:01.029" endtime="20190319 01:53:01.029"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:01.034" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:01.249" level="INFO">Post Request using : alias=ApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU", "P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU", "1000000000", "1000000000", ["ApplyBecomeMediator", "{\"key\":\"value\"}"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:01.249" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:01.029" endtime="20190319 01:53:01.249"></status>
</kw>
<msg timestamp="20190319 01:53:01.249" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:01.025" endtime="20190319 01:53:01.249"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:53:01.250" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"32f85b4ca0e21ba4a43d88e3165d2a1f47e04fba45b2b0a1d3c55e380a619611"}
</msg>
<status status="PASS" starttime="20190319 01:53:01.250" endtime="20190319 01:53:01.250"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:53:09.251" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:53:01.250" endtime="20190319 01:53:09.251"></status>
</kw>
<msg timestamp="20190319 01:53:09.252" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"32f85b4ca0e21ba4a43d88e3165d2a1f47e04fba45b2b0a1d3c55e380a619611"}
</msg>
<status status="PASS" starttime="20190319 01:53:01.022" endtime="20190319 01:53:09.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:09.255" level="INFO">{"jsonrpc":"2.0","id":"1","result":"32f85b4ca0e21ba4a43d88e3165d2a1f47e04fba45b2b0a1d3c55e380a619611"}
</msg>
<status status="PASS" starttime="20190319 01:53:09.254" endtime="20190319 01:53:09.256"></status>
</kw>
<kw name="getBecomeMediatorApplyList" library="getBecomeMediatorApplyListParams">
<assign>
<var>@{addressList1}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:09.260" level="INFO">${one} = ['GetBecomeMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:53:09.259" endtime="20190319 01:53:09.260"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:09.262" level="INFO">${two} = [['GetBecomeMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:53:09.261" endtime="20190319 01:53:09.263"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:09.272" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:09.266" endtime="20190319 01:53:09.272"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:09.276" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBecomeMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:09.273" endtime="20190319 01:53:09.276"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:09.277" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:09.276" endtime="20190319 01:53:09.278"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:09.281" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:09.285" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBecomeMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:09.285" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:09.278" endtime="20190319 01:53:09.285"></status>
</kw>
<msg timestamp="20190319 01:53:09.286" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:09.264" endtime="20190319 01:53:09.286"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:09.287" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:09.287" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:09.287" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:09.286" endtime="20190319 01:53:09.287"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:09.288" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:09.288" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:09.287" endtime="20190319 01:53:09.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:09.289" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:09.288" endtime="20190319 01:53:09.289"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:53:09.290" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:09.289" endtime="20190319 01:53:09.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:09.291" endtime="20190319 01:53:09.291"></status>
</kw>
<msg timestamp="20190319 01:53:09.291" level="INFO">@{addressList} = [ P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU ]</msg>
<status status="PASS" starttime="20190319 01:53:09.290" endtime="20190319 01:53:09.291"></status>
</kw>
<msg timestamp="20190319 01:53:09.292" level="INFO">@{addressList1} = [ P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU ]</msg>
<status status="PASS" starttime="20190319 01:53:09.257" endtime="20190319 01:53:09.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{addressList1}</arg>
</arguments>
<msg timestamp="20190319 01:53:09.292" level="INFO">P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU</msg>
<status status="PASS" starttime="20190319 01:53:09.292" endtime="20190319 01:53:09.293"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${mediatorAddr_01}' in @{addressList1}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:09.293" endtime="20190319 01:53:09.293"></status>
</kw>
<kw name="handleForApplyBecomeMediator" library="handleForApplyBecomeMediatorParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="基金会处理申请所需参数" library="handleForApplyBecomeMediatorParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${基金会处理申请所需参数 }</var>
</assign>
<kw name="获取Mediator申请加入列表" library="getBecomeMediatorApplyListParams">
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${获取Mediator申请加入列表 }</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:09.296" level="INFO">${one} = ['GetBecomeMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:53:09.296" endtime="20190319 01:53:09.296"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:09.296" level="INFO">${two} = [['GetBecomeMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:53:09.296" endtime="20190319 01:53:09.297"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:09.298" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:09.297" endtime="20190319 01:53:09.298"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:09.299" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBecomeMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:09.299" endtime="20190319 01:53:09.299"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:09.300" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:09.299" endtime="20190319 01:53:09.300"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:09.302" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:09.304" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBecomeMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:09.304" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:09.300" endtime="20190319 01:53:09.304"></status>
</kw>
<msg timestamp="20190319 01:53:09.305" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:09.297" endtime="20190319 01:53:09.305"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:09.306" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:09.306" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:09.306" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:09.305" endtime="20190319 01:53:09.306"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:09.306" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:09.306" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:09.306" endtime="20190319 01:53:09.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>set variable</arg>
<arg>""</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:09.307" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:09.307" endtime="20190319 01:53:09.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>set variable</arg>
<arg>""</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20190319 01:53:09.308" level="INFO">${time} = None</msg>
<status status="PASS" starttime="20190319 01:53:09.308" endtime="20190319 01:53:09.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addresses['address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:09.309" endtime="20190319 01:53:09.309"></status>
</kw>
<msg timestamp="20190319 01:53:09.309" level="INFO">${addresses} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']</msg>
<status status="PASS" starttime="20190319 01:53:09.308" endtime="20190319 01:53:09.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[times['time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${times}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[times['time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:09.310" endtime="20190319 01:53:09.310"></status>
</kw>
<msg timestamp="20190319 01:53:09.310" level="INFO">${times} = [862769]</msg>
<status status="PASS" starttime="20190319 01:53:09.309" endtime="20190319 01:53:09.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>set variable</arg>
<arg>${addresses}[${index}]</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}[${index}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:09.311" endtime="20190319 01:53:09.312"></status>
</kw>
<msg timestamp="20190319 01:53:09.312" level="INFO">${address} = P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU</msg>
<status status="PASS" starttime="20190319 01:53:09.311" endtime="20190319 01:53:09.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>set variable</arg>
<arg>${times}[${index}]</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${times}[${index}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:09.312" endtime="20190319 01:53:09.313"></status>
</kw>
<msg timestamp="20190319 01:53:09.313" level="INFO">${time} = 862769</msg>
<status status="PASS" starttime="20190319 01:53:09.312" endtime="20190319 01:53:09.313"></status>
</kw>
<msg timestamp="20190319 01:53:09.313" level="INFO">${获取Mediator申请加入列表 } = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 862769]</msg>
<status status="PASS" starttime="20190319 01:53:09.295" endtime="20190319 01:53:09.313"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HandleForApplyBecomeMediator</arg>
<arg>ok</arg>
<arg>${获取Mediator申请加入列表}[0]</arg>
</arguments>
<assign>
<var>${1}</var>
</assign>
<msg timestamp="20190319 01:53:09.314" level="INFO">${1} = ['HandleForApplyBecomeMediator', 'ok', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']</msg>
<status status="PASS" starttime="20190319 01:53:09.313" endtime="20190319 01:53:09.314"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:09.315" level="INFO">${one} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyBecomeMediator', 'ok', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']]</msg>
<status status="PASS" starttime="20190319 01:53:09.314" endtime="20190319 01:53:09.315"></status>
</kw>
<msg timestamp="20190319 01:53:09.315" level="INFO">${基金会处理申请所需参数 } = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyBecomeMediator', 'ok', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']]</msg>
<status status="PASS" starttime="20190319 01:53:09.295" endtime="20190319 01:53:09.315"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForApplyBecomeMediator</arg>
<arg>${基金会处理申请所需参数 }</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:09.316" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:09.316" endtime="20190319 01:53:09.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:09.317" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyBecomeMed...</msg>
<status status="PASS" starttime="20190319 01:53:09.316" endtime="20190319 01:53:09.317"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:09.317" level="INFO">Creating Session using : alias=HandleForApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:09.317" endtime="20190319 01:53:09.318"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:09.319" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:09.323" level="INFO">Post Request using : alias=HandleForApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "1000000000", "1000000000", ["HandleForApplyBecomeMediator", "ok", "P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:09.323" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:09.318" endtime="20190319 01:53:09.323"></status>
</kw>
<msg timestamp="20190319 01:53:09.323" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:09.315" endtime="20190319 01:53:09.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:53:09.324" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"59e52eafb8acf1b182c02cfc21ee68736137e887a23e9d99250fbe0a4f3672fd"}
</msg>
<status status="PASS" starttime="20190319 01:53:09.323" endtime="20190319 01:53:09.324"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:53:17.325" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:53:09.324" endtime="20190319 01:53:17.326"></status>
</kw>
<msg timestamp="20190319 01:53:17.327" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"59e52eafb8acf1b182c02cfc21ee68736137e887a23e9d99250fbe0a4f3672fd"}
</msg>
<status status="PASS" starttime="20190319 01:53:09.294" endtime="20190319 01:53:17.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:17.330" level="INFO">{"jsonrpc":"2.0","id":"1","result":"59e52eafb8acf1b182c02cfc21ee68736137e887a23e9d99250fbe0a4f3672fd"}
</msg>
<status status="PASS" starttime="20190319 01:53:17.329" endtime="20190319 01:53:17.330"></status>
</kw>
<kw name="getAgreeForBecomeMediatorList" library="getAgreeForBecomeMediatorListParams">
<assign>
<var>@{addressList2}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAgreeForBecomeMediatorList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:17.334" level="INFO">${one} = ['GetAgreeForBecomeMediatorList']</msg>
<status status="PASS" starttime="20190319 01:53:17.333" endtime="20190319 01:53:17.335"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:17.337" level="INFO">${two} = [['GetAgreeForBecomeMediatorList']]</msg>
<status status="PASS" starttime="20190319 01:53:17.336" endtime="20190319 01:53:17.337"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAgreeForBecomeMediatorList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:17.342" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:17.341" endtime="20190319 01:53:17.342"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:17.345" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetAgreeForBecomeMediatorList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:17.343" endtime="20190319 01:53:17.346"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:17.346" level="INFO">Creating Session using : alias=GetAgreeForBecomeMediatorList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:17.346" endtime="20190319 01:53:17.347"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:17.348" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:17.351" level="INFO">Post Request using : alias=GetAgreeForBecomeMediatorList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetAgreeForBecomeMediatorList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:17.351" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:17.347" endtime="20190319 01:53:17.351"></status>
</kw>
<msg timestamp="20190319 01:53:17.351" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:17.338" endtime="20190319 01:53:17.351"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:17.352" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:17.352" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:17.352" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:17.352" endtime="20190319 01:53:17.352"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:17.353" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:17.353" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:17.352" endtime="20190319 01:53:17.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:17.353" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:17.353" endtime="20190319 01:53:17.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${addressList}</var>
</assign>
<msg timestamp="20190319 01:53:17.354" level="INFO">${addressList} = None</msg>
<status status="PASS" starttime="20190319 01:53:17.354" endtime="20190319 01:53:17.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:17.355" endtime="20190319 01:53:17.355"></status>
</kw>
<msg timestamp="20190319 01:53:17.355" level="INFO">${addressList} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']</msg>
<status status="PASS" starttime="20190319 01:53:17.354" endtime="20190319 01:53:17.356"></status>
</kw>
<msg timestamp="20190319 01:53:17.356" level="INFO">@{addressList2} = [ P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU ]</msg>
<status status="PASS" starttime="20190319 01:53:17.331" endtime="20190319 01:53:17.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{addressList2}</arg>
</arguments>
<msg timestamp="20190319 01:53:17.356" level="INFO">P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU</msg>
<status status="PASS" starttime="20190319 01:53:17.356" endtime="20190319 01:53:17.356"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${mediatorAddr_01}' in @{addressList2}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:17.357" endtime="20190319 01:53:17.357"></status>
</kw>
<kw name="mediatorPayToDepositContract" library="mediatorPayToDepositContractParams">
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>200000000000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mediator交付保证金所需参数" library="mediatorPayToDepositContractParams">
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<assign>
<var>${Mediator交付保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MediatorPayToDepositContract</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:17.359" level="INFO">${one} = ['MediatorPayToDepositContract']</msg>
<status status="PASS" starttime="20190319 01:53:17.359" endtime="20190319 01:53:17.359"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:17.360" level="INFO">${two} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '200000000000', '1000000000', ['MediatorPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:53:17.359" endtime="20190319 01:53:17.360"></status>
</kw>
<msg timestamp="20190319 01:53:17.360" level="INFO">${Mediator交付保证金所需参数} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '200000000000', '1000000000', ['MediatorPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:53:17.358" endtime="20190319 01:53:17.360"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>MediatorPayToDepositContract</arg>
<arg>${Mediator交付保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:17.362" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:17.361" endtime="20190319 01:53:17.362"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:17.363" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '200000000000', '1000000000', ['MediatorPayToDepositC...</msg>
<status status="PASS" starttime="20190319 01:53:17.362" endtime="20190319 01:53:17.363"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:17.363" level="INFO">Creating Session using : alias=MediatorPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:17.363" endtime="20190319 01:53:17.363"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:17.365" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:17.368" level="INFO">Post Request using : alias=MediatorPayToDepositContract, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "200000000000", "1000000000", ["MediatorPayToDepositContract"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:17.368" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:17.364" endtime="20190319 01:53:17.368"></status>
</kw>
<msg timestamp="20190319 01:53:17.368" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:17.360" endtime="20190319 01:53:17.368"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:53:17.369" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"e74ba1aa70a34c18e1c68bcccdbab49b9c3a32073e35e81113b3a0393de398d0"}
</msg>
<status status="PASS" starttime="20190319 01:53:17.369" endtime="20190319 01:53:17.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:53:25.370" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:53:17.369" endtime="20190319 01:53:25.371"></status>
</kw>
<msg timestamp="20190319 01:53:25.372" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"e74ba1aa70a34c18e1c68bcccdbab49b9c3a32073e35e81113b3a0393de398d0"}
</msg>
<status status="PASS" starttime="20190319 01:53:17.358" endtime="20190319 01:53:25.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:25.375" level="INFO">{"jsonrpc":"2.0","id":"1","result":"e74ba1aa70a34c18e1c68bcccdbab49b9c3a32073e35e81113b3a0393de398d0"}
</msg>
<status status="PASS" starttime="20190319 01:53:25.374" endtime="20190319 01:53:25.375"></status>
</kw>
<kw name="getListForMediatorCandidate" library="getListForMediatorCandidateParams">
<assign>
<var>@{addressList3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:25.380" level="INFO">${one} = ['GetListForMediatorCandidate']</msg>
<status status="PASS" starttime="20190319 01:53:25.379" endtime="20190319 01:53:25.380"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:25.382" level="INFO">${two} = [['GetListForMediatorCandidate']]</msg>
<status status="PASS" starttime="20190319 01:53:25.381" endtime="20190319 01:53:25.383"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:25.388" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:25.386" endtime="20190319 01:53:25.388"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:25.391" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForMediatorCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:25.389" endtime="20190319 01:53:25.391"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:25.393" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:25.392" endtime="20190319 01:53:25.395"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:25.401" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:25.410" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForMediatorCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:25.411" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:25.396" endtime="20190319 01:53:25.411"></status>
</kw>
<msg timestamp="20190319 01:53:25.412" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:25.384" endtime="20190319 01:53:25.412"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:25.415" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:25.415" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:25.415" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:25.413" endtime="20190319 01:53:25.416"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:25.417" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:25.417" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:25.416" endtime="20190319 01:53:25.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:25.418" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:25.418" endtime="20190319 01:53:25.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:53:25.419" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:25.419" endtime="20190319 01:53:25.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:25.421" endtime="20190319 01:53:25.421"></status>
</kw>
<msg timestamp="20190319 01:53:25.422" level="INFO">@{addressList} = [ P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU ]</msg>
<status status="PASS" starttime="20190319 01:53:25.420" endtime="20190319 01:53:25.422"></status>
</kw>
<msg timestamp="20190319 01:53:25.422" level="INFO">@{addressList3} = [ P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU ]</msg>
<status status="PASS" starttime="20190319 01:53:25.376" endtime="20190319 01:53:25.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{addressList3}</arg>
</arguments>
<msg timestamp="20190319 01:53:25.423" level="INFO">P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU</msg>
<status status="PASS" starttime="20190319 01:53:25.423" endtime="20190319 01:53:25.423"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${mediatorAddr_01}' in @{addressList3}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:25.423" endtime="20190319 01:53:25.424"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${mediatorAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:25.427" level="INFO">${one} = ['GetBalanceWithAddr', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']</msg>
<status status="PASS" starttime="20190319 01:53:25.426" endtime="20190319 01:53:25.427"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:25.427" level="INFO">${two} = [['GetBalanceWithAddr', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']]</msg>
<status status="PASS" starttime="20190319 01:53:25.427" endtime="20190319 01:53:25.428"></status>
</kw>
<msg timestamp="20190319 01:53:25.428" level="INFO">${11} = [['GetBalanceWithAddr', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']]</msg>
<status status="PASS" starttime="20190319 01:53:25.426" endtime="20190319 01:53:25.428"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:25.429" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:25.429" endtime="20190319 01:53:25.429"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:25.430" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:25.429" endtime="20190319 01:53:25.430"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:25.430" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:25.430" endtime="20190319 01:53:25.431"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:25.432" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:25.435" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:25.435" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:25.431" endtime="20190319 01:53:25.435"></status>
</kw>
<msg timestamp="20190319 01:53:25.435" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:25.428" endtime="20190319 01:53:25.435"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:25.436" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":200000000000,\"last_modify_time\":862769,\"enter_time\":862769,\"pay_values\":[{\"pay_tokens\":{\"amount\":200000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":null,\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:53:25.436" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:25.436" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":200000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":200000000000,"asset":"PTN","address":""},"pay_...</msg>
<status status="PASS" starttime="20190319 01:53:25.436" endtime="20190319 01:53:25.436"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:53:25.437" level="INFO">${balance} = {"total_amount":200000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":200000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"fo...</msg>
<status status="PASS" starttime="20190319 01:53:25.436" endtime="20190319 01:53:25.437"></status>
</kw>
<msg timestamp="20190319 01:53:25.437" level="INFO">${result} = {"total_amount":200000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":200000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"fo...</msg>
<status status="PASS" starttime="20190319 01:53:25.425" endtime="20190319 01:53:25.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:25.438" level="INFO">{"total_amount":200000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":200000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:53:25.437" endtime="20190319 01:53:25.438"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:25.438" endtime="20190319 01:53:25.438"></status>
</kw>
<kw name="applyQuitMediator" library="applyQuitMediatorParams">
<arguments>
<arg>${mediatorAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="申请退出Mediator候选节点所需参数" library="applyQuitMediatorParams">
<arguments>
<arg>${mediatorAddr}</arg>
</arguments>
<assign>
<var>${申请退出Mediator候选节点所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MediatorApplyQuitMediator</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:25.440" level="INFO">${one} = ['MediatorApplyQuitMediator']</msg>
<status status="PASS" starttime="20190319 01:53:25.440" endtime="20190319 01:53:25.440"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:25.441" level="INFO">${two} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', '1000000000', '1000000000', ['MediatorApplyQuitMediator']]</msg>
<status status="PASS" starttime="20190319 01:53:25.440" endtime="20190319 01:53:25.441"></status>
</kw>
<msg timestamp="20190319 01:53:25.441" level="INFO">${申请退出Mediator候选节点所需参数} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', '1000000000', '1000000000', ['MediatorApplyQuitMediator']]</msg>
<status status="PASS" starttime="20190319 01:53:25.439" endtime="20190319 01:53:25.441"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>ApplyBecomeMediator</arg>
<arg>${申请退出Mediator候选节点所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:25.442" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:25.442" endtime="20190319 01:53:25.442"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:25.443" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', '1000000000', '1000000000', ['MediatorApplyQuitMediat...</msg>
<status status="PASS" starttime="20190319 01:53:25.443" endtime="20190319 01:53:25.443"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:25.444" level="INFO">Creating Session using : alias=ApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:25.443" endtime="20190319 01:53:25.444"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:25.446" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:25.449" level="INFO">Post Request using : alias=ApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU", "P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU", "1000000000", "1000000000", ["MediatorApplyQuitMediator"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:25.449" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:25.444" endtime="20190319 01:53:25.449"></status>
</kw>
<msg timestamp="20190319 01:53:25.450" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:25.441" endtime="20190319 01:53:25.450"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:53:25.450" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"8b121b49b8e271e84aaaf4fcdcadecfd5d0deb2e1b2c302fe8f8144562e1b28d"}
</msg>
<status status="PASS" starttime="20190319 01:53:25.450" endtime="20190319 01:53:25.450"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:53:33.451" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:53:25.451" endtime="20190319 01:53:33.451"></status>
</kw>
<msg timestamp="20190319 01:53:33.452" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"8b121b49b8e271e84aaaf4fcdcadecfd5d0deb2e1b2c302fe8f8144562e1b28d"}
</msg>
<status status="PASS" starttime="20190319 01:53:25.439" endtime="20190319 01:53:33.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:33.453" level="INFO">{"jsonrpc":"2.0","id":"1","result":"8b121b49b8e271e84aaaf4fcdcadecfd5d0deb2e1b2c302fe8f8144562e1b28d"}
</msg>
<status status="PASS" starttime="20190319 01:53:33.452" endtime="20190319 01:53:33.453"></status>
</kw>
<kw name="getQuitMediatorApplyList" library="getQuitMediatorApplyListParams">
<assign>
<var>@{addressList4}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetQuitMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:33.454" level="INFO">${one} = ['GetQuitMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:53:33.454" endtime="20190319 01:53:33.454"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:33.454" level="INFO">${two} = [['GetQuitMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:53:33.454" endtime="20190319 01:53:33.454"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetQuitMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:33.456" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:33.455" endtime="20190319 01:53:33.456"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:33.456" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetQuitMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:33.456" endtime="20190319 01:53:33.456"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:33.457" level="INFO">Creating Session using : alias=GetQuitMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:33.457" endtime="20190319 01:53:33.457"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:33.459" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:33.462" level="INFO">Post Request using : alias=GetQuitMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetQuitMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:33.462" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:33.457" endtime="20190319 01:53:33.462"></status>
</kw>
<msg timestamp="20190319 01:53:33.462" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:33.455" endtime="20190319 01:53:33.462"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:33.463" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:33.463" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:33.463" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:33.462" endtime="20190319 01:53:33.463"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:33.464" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:33.464" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:33.463" endtime="20190319 01:53:33.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is not exist.</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:33.465" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:33.464" endtime="20190319 01:53:33.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:53:33.465" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:33.465" endtime="20190319 01:53:33.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:33.466" endtime="20190319 01:53:33.467"></status>
</kw>
<msg timestamp="20190319 01:53:33.467" level="INFO">@{addressList} = [ P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU ]</msg>
<status status="PASS" starttime="20190319 01:53:33.466" endtime="20190319 01:53:33.467"></status>
</kw>
<msg timestamp="20190319 01:53:33.467" level="INFO">@{addressList4} = [ P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU ]</msg>
<status status="PASS" starttime="20190319 01:53:33.453" endtime="20190319 01:53:33.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{addressList4}</arg>
</arguments>
<msg timestamp="20190319 01:53:33.468" level="INFO">P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU</msg>
<status status="PASS" starttime="20190319 01:53:33.468" endtime="20190319 01:53:33.468"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${mediatorAddr_01}' in @{addressList4}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:33.469" endtime="20190319 01:53:33.469"></status>
</kw>
<kw name="handleForApplyForQuitMediator" library="handleForApplyForQuitMediatorParams">
<arguments>
<arg>${foundationAddr}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="基金会处理申请退出Mediator列表的所需参数" library="handleForApplyForQuitMediatorParams">
<arguments>
<arg>${foundationAddr}</arg>
</arguments>
<assign>
<var>${基金会处理申请退出Mediator列表的所需参数}</var>
</assign>
<kw name="获取Mediator申请退出列表" library="getQuitMediatorApplyListParams">
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${获取Mediator申请退出列表}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetQuitMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:33.472" level="INFO">${one} = ['GetQuitMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:53:33.472" endtime="20190319 01:53:33.472"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:33.473" level="INFO">${two} = [['GetQuitMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:53:33.472" endtime="20190319 01:53:33.473"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetQuitMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:33.474" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:33.474" endtime="20190319 01:53:33.474"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:33.475" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetQuitMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:33.474" endtime="20190319 01:53:33.475"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:33.475" level="INFO">Creating Session using : alias=GetQuitMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:33.475" endtime="20190319 01:53:33.476"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:33.477" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:33.480" level="INFO">Post Request using : alias=GetQuitMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetQuitMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:33.480" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:33.476" endtime="20190319 01:53:33.480"></status>
</kw>
<msg timestamp="20190319 01:53:33.481" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:33.473" endtime="20190319 01:53:33.481"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:33.481" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:33.481" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:33.481" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:33.481" endtime="20190319 01:53:33.482"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:33.482" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:33.482" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:33.482" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:33.482" endtime="20190319 01:53:33.482"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:33.483" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:33.483" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:33.483" endtime="20190319 01:53:33.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>set variable</arg>
<arg>""</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:33.484" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:33.483" endtime="20190319 01:53:33.484"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>set variable</arg>
<arg>""</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20190319 01:53:33.484" level="INFO">${time} = None</msg>
<status status="PASS" starttime="20190319 01:53:33.484" endtime="20190319 01:53:33.484"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addresses['address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:33.485" endtime="20190319 01:53:33.485"></status>
</kw>
<msg timestamp="20190319 01:53:33.486" level="INFO">${addresses} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']</msg>
<status status="PASS" starttime="20190319 01:53:33.485" endtime="20190319 01:53:33.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[times['time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${times}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[times['time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:33.486" endtime="20190319 01:53:33.487"></status>
</kw>
<msg timestamp="20190319 01:53:33.487" level="INFO">${times} = [862769]</msg>
<status status="PASS" starttime="20190319 01:53:33.486" endtime="20190319 01:53:33.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>set variable</arg>
<arg>${addresses}[${index}]</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}[${index}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:33.488" endtime="20190319 01:53:33.488"></status>
</kw>
<msg timestamp="20190319 01:53:33.488" level="INFO">${address} = P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU</msg>
<status status="PASS" starttime="20190319 01:53:33.487" endtime="20190319 01:53:33.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>set variable</arg>
<arg>${times}[${index}]</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${times}[${index}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:33.489" endtime="20190319 01:53:33.489"></status>
</kw>
<msg timestamp="20190319 01:53:33.489" level="INFO">${time} = 862769</msg>
<status status="PASS" starttime="20190319 01:53:33.489" endtime="20190319 01:53:33.489"></status>
</kw>
<msg timestamp="20190319 01:53:33.490" level="INFO">${获取Mediator申请退出列表} = ['P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU', 862769]</msg>
<status status="PASS" starttime="20190319 01:53:33.471" endtime="20190319 01:53:33.490"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HandleForApplyQuitMediator</arg>
<arg>ok</arg>
<arg>${获取Mediator申请退出列表}[0]</arg>
</arguments>
<assign>
<var>${1}</var>
</assign>
<msg timestamp="20190319 01:53:33.490" level="INFO">${1} = ['HandleForApplyQuitMediator', 'ok', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']</msg>
<status status="PASS" starttime="20190319 01:53:33.490" endtime="20190319 01:53:33.490"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:33.491" level="INFO">${one} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyQuitMediator', 'ok', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']]</msg>
<status status="PASS" starttime="20190319 01:53:33.491" endtime="20190319 01:53:33.491"></status>
</kw>
<msg timestamp="20190319 01:53:33.491" level="INFO">${基金会处理申请退出Mediator列表的所需参数} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyQuitMediator', 'ok', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']]</msg>
<status status="PASS" starttime="20190319 01:53:33.470" endtime="20190319 01:53:33.491"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForApplyForQuitMediator</arg>
<arg>${基金会处理申请退出Mediator列表的所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:33.493" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:33.492" endtime="20190319 01:53:33.493"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:33.493" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyQuitMedia...</msg>
<status status="PASS" starttime="20190319 01:53:33.493" endtime="20190319 01:53:33.493"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:33.494" level="INFO">Creating Session using : alias=HandleForApplyForQuitMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:33.494" endtime="20190319 01:53:33.495"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:33.496" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:33.499" level="INFO">Post Request using : alias=HandleForApplyForQuitMediator, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "1000000000", "1000000000", ["HandleForApplyQuitMediator", "ok", "P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:33.499" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:33.495" endtime="20190319 01:53:33.499"></status>
</kw>
<msg timestamp="20190319 01:53:33.500" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:33.492" endtime="20190319 01:53:33.500"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:53:33.500" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"b34a0090e5e3840efb05bff8bd6c333762c2906cab6024222068e782f428b20d"}
</msg>
<status status="PASS" starttime="20190319 01:53:33.500" endtime="20190319 01:53:33.500"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:53:41.502" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:53:33.501" endtime="20190319 01:53:41.503"></status>
</kw>
<msg timestamp="20190319 01:53:41.504" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"b34a0090e5e3840efb05bff8bd6c333762c2906cab6024222068e782f428b20d"}
</msg>
<status status="PASS" starttime="20190319 01:53:33.470" endtime="20190319 01:53:41.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:41.507" level="INFO">{"jsonrpc":"2.0","id":"1","result":"b34a0090e5e3840efb05bff8bd6c333762c2906cab6024222068e782f428b20d"}
</msg>
<status status="PASS" starttime="20190319 01:53:41.506" endtime="20190319 01:53:41.507"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${mediatorAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:41.515" level="INFO">${one} = ['GetBalanceWithAddr', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']</msg>
<status status="PASS" starttime="20190319 01:53:41.514" endtime="20190319 01:53:41.515"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:41.517" level="INFO">${two} = [['GetBalanceWithAddr', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']]</msg>
<status status="PASS" starttime="20190319 01:53:41.516" endtime="20190319 01:53:41.518"></status>
</kw>
<msg timestamp="20190319 01:53:41.519" level="INFO">${11} = [['GetBalanceWithAddr', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']]</msg>
<status status="PASS" starttime="20190319 01:53:41.511" endtime="20190319 01:53:41.519"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:41.524" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:41.522" endtime="20190319 01:53:41.524"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:41.526" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:41.525" endtime="20190319 01:53:41.526"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:41.527" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:41.526" endtime="20190319 01:53:41.527"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:41.529" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:41.531" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P124CZmBwMfE2kYgJsb3dK6fxbH2Kwnm6SU"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:41.531" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.527" endtime="20190319 01:53:41.531"></status>
</kw>
<msg timestamp="20190319 01:53:41.532" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.520" endtime="20190319 01:53:41.532"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:41.532" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"balance is nil"}
 </msg>
<msg timestamp="20190319 01:53:41.532" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:41.532" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': 'balance is nil'}</msg>
<status status="PASS" starttime="20190319 01:53:41.532" endtime="20190319 01:53:41.532"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:53:41.533" level="INFO">${balance} = balance is nil</msg>
<status status="PASS" starttime="20190319 01:53:41.533" endtime="20190319 01:53:41.533"></status>
</kw>
<msg timestamp="20190319 01:53:41.533" level="INFO">${result} = balance is nil</msg>
<status status="PASS" starttime="20190319 01:53:41.509" endtime="20190319 01:53:41.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:41.534" level="INFO">balance is nil</msg>
<status status="PASS" starttime="20190319 01:53:41.534" endtime="20190319 01:53:41.534"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:41.534" endtime="20190319 01:53:41.535"></status>
</kw>
<kw name="getBecomeMediatorApplyList" library="getBecomeMediatorApplyListParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:41.536" level="INFO">${one} = ['GetBecomeMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:53:41.536" endtime="20190319 01:53:41.536"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:41.537" level="INFO">${two} = [['GetBecomeMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:53:41.536" endtime="20190319 01:53:41.537"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:41.538" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:41.537" endtime="20190319 01:53:41.538"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:41.539" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBecomeMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:41.538" endtime="20190319 01:53:41.539"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:41.540" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:41.539" endtime="20190319 01:53:41.540"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:41.542" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:41.544" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBecomeMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:41.544" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.540" endtime="20190319 01:53:41.544"></status>
</kw>
<msg timestamp="20190319 01:53:41.544" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.537" endtime="20190319 01:53:41.544"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:41.545" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:53:41.545" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:41.545" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:53:41.545" endtime="20190319 01:53:41.545"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:41.546" level="INFO">Length is 2</msg>
<msg timestamp="20190319 01:53:41.546" level="INFO">${resultLen} = 2</msg>
<status status="PASS" starttime="20190319 01:53:41.545" endtime="20190319 01:53:41.546"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:41.546" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:41.546" endtime="20190319 01:53:41.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:53:41.547" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:41.547" endtime="20190319 01:53:41.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:41.548" endtime="20190319 01:53:41.548"></status>
</kw>
<msg timestamp="20190319 01:53:41.548" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:41.547" endtime="20190319 01:53:41.548"></status>
</kw>
<msg timestamp="20190319 01:53:41.549" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:53:41.535" endtime="20190319 01:53:41.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:41.549" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:53:41.549" endtime="20190319 01:53:41.549"></status>
</kw>
<kw name="getAgreeForBecomeMediatorList" library="getAgreeForBecomeMediatorListParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAgreeForBecomeMediatorList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:41.550" level="INFO">${one} = ['GetAgreeForBecomeMediatorList']</msg>
<status status="PASS" starttime="20190319 01:53:41.550" endtime="20190319 01:53:41.550"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:41.551" level="INFO">${two} = [['GetAgreeForBecomeMediatorList']]</msg>
<status status="PASS" starttime="20190319 01:53:41.551" endtime="20190319 01:53:41.551"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAgreeForBecomeMediatorList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:41.552" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:41.552" endtime="20190319 01:53:41.552"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:41.553" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetAgreeForBecomeMediatorList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:41.553" endtime="20190319 01:53:41.553"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:41.554" level="INFO">Creating Session using : alias=GetAgreeForBecomeMediatorList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:41.553" endtime="20190319 01:53:41.554"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:41.556" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:41.558" level="INFO">Post Request using : alias=GetAgreeForBecomeMediatorList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetAgreeForBecomeMediatorList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:41.558" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.554" endtime="20190319 01:53:41.558"></status>
</kw>
<msg timestamp="20190319 01:53:41.559" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.551" endtime="20190319 01:53:41.559"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:41.559" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:53:41.559" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:41.559" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:53:41.559" endtime="20190319 01:53:41.560"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:41.560" level="INFO">Length is 2</msg>
<msg timestamp="20190319 01:53:41.560" level="INFO">${resultLen} = 2</msg>
<status status="PASS" starttime="20190319 01:53:41.560" endtime="20190319 01:53:41.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:41.561" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:41.560" endtime="20190319 01:53:41.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${addressList}</var>
</assign>
<msg timestamp="20190319 01:53:41.561" level="INFO">${addressList} = None</msg>
<status status="PASS" starttime="20190319 01:53:41.561" endtime="20190319 01:53:41.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:41.562" endtime="20190319 01:53:41.563"></status>
</kw>
<msg timestamp="20190319 01:53:41.563" level="INFO">${addressList} = []</msg>
<status status="PASS" starttime="20190319 01:53:41.562" endtime="20190319 01:53:41.563"></status>
</kw>
<msg timestamp="20190319 01:53:41.563" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:53:41.550" endtime="20190319 01:53:41.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:41.564" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:53:41.564" endtime="20190319 01:53:41.564"></status>
</kw>
<kw name="getListForMediatorCandidate" library="getListForMediatorCandidateParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:41.565" level="INFO">${one} = ['GetListForMediatorCandidate']</msg>
<status status="PASS" starttime="20190319 01:53:41.565" endtime="20190319 01:53:41.565"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:41.566" level="INFO">${two} = [['GetListForMediatorCandidate']]</msg>
<status status="PASS" starttime="20190319 01:53:41.565" endtime="20190319 01:53:41.566"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:41.567" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:41.566" endtime="20190319 01:53:41.567"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:41.568" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForMediatorCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:41.567" endtime="20190319 01:53:41.568"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:41.568" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:41.568" endtime="20190319 01:53:41.568"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:41.570" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:41.572" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForMediatorCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:41.573" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.569" endtime="20190319 01:53:41.573"></status>
</kw>
<msg timestamp="20190319 01:53:41.573" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.566" endtime="20190319 01:53:41.573"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:41.574" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:53:41.574" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:41.574" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:53:41.573" endtime="20190319 01:53:41.574"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:41.574" level="INFO">Length is 2</msg>
<msg timestamp="20190319 01:53:41.575" level="INFO">${resultLen} = 2</msg>
<status status="PASS" starttime="20190319 01:53:41.574" endtime="20190319 01:53:41.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:41.575" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:41.575" endtime="20190319 01:53:41.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:53:41.576" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:41.576" endtime="20190319 01:53:41.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:41.577" endtime="20190319 01:53:41.577"></status>
</kw>
<msg timestamp="20190319 01:53:41.577" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:41.576" endtime="20190319 01:53:41.577"></status>
</kw>
<msg timestamp="20190319 01:53:41.577" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:53:41.564" endtime="20190319 01:53:41.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:41.578" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:53:41.578" endtime="20190319 01:53:41.578"></status>
</kw>
<kw name="getQuitMediatorApplyList" library="getQuitMediatorApplyListParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetQuitMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:41.579" level="INFO">${one} = ['GetQuitMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:53:41.579" endtime="20190319 01:53:41.579"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:41.580" level="INFO">${two} = [['GetQuitMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:53:41.579" endtime="20190319 01:53:41.580"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetQuitMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:41.581" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:41.581" endtime="20190319 01:53:41.581"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:41.582" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetQuitMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:41.581" endtime="20190319 01:53:41.582"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:41.582" level="INFO">Creating Session using : alias=GetQuitMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:41.582" endtime="20190319 01:53:41.583"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:41.585" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:41.587" level="INFO">Post Request using : alias=GetQuitMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetQuitMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:41.587" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.583" endtime="20190319 01:53:41.587"></status>
</kw>
<msg timestamp="20190319 01:53:41.587" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.580" endtime="20190319 01:53:41.588"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:41.588" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:53:41.588" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:41.588" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:53:41.588" endtime="20190319 01:53:41.588"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:41.589" level="INFO">Length is 2</msg>
<msg timestamp="20190319 01:53:41.589" level="INFO">${resultLen} = 2</msg>
<status status="PASS" starttime="20190319 01:53:41.589" endtime="20190319 01:53:41.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is not exist.</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:41.590" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:41.589" endtime="20190319 01:53:41.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:53:41.590" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:41.590" endtime="20190319 01:53:41.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:41.591" endtime="20190319 01:53:41.592"></status>
</kw>
<msg timestamp="20190319 01:53:41.592" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:41.591" endtime="20190319 01:53:41.592"></status>
</kw>
<msg timestamp="20190319 01:53:41.592" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:53:41.578" endtime="20190319 01:53:41.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:41.593" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:53:41.592" endtime="20190319 01:53:41.593"></status>
</kw>
<doc>某节点申请加入mediator-》进入申请列表-》基金会同意-》进入同意列表-》节点加入保证金（足够）-》进入候选列表-》节点申请退出候选列表-》进入退出列表-》基金会同意。此时，所有列表为空</doc>
<status status="PASS" starttime="20190319 01:53:01.006" endtime="20190319 01:53:41.593" critical="yes"></status>
</test>
<test id="s1-t2" name="Business_02">
<kw name="applyBecomeMediator" library="applyBecomeMediatorParams">
<arguments>
<arg>${mediatorAddr_02}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="申请加入Mediator候选节点所需参数" library="applyBecomeMediatorParams">
<arguments>
<arg>${mediatorAddr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>ApplyBecomeMediator</arg>
<arg>{\"key\":\"value\"}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:41.613" level="INFO">${one} = ['ApplyBecomeMediator', '{"key":"value"}']</msg>
<status status="PASS" starttime="20190319 01:53:41.612" endtime="20190319 01:53:41.613"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:41.613" level="INFO">${two} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '1000000000', '1000000000', ['ApplyBecomeMediator', '{"key":"value"}']]</msg>
<status status="PASS" starttime="20190319 01:53:41.613" endtime="20190319 01:53:41.613"></status>
</kw>
<msg timestamp="20190319 01:53:41.614" level="INFO">${params} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '1000000000', '1000000000', ['ApplyBecomeMediator', '{"key":"value"}']]</msg>
<status status="PASS" starttime="20190319 01:53:41.612" endtime="20190319 01:53:41.614"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>ApplyBecomeMediator</arg>
<arg>${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:41.615" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:41.614" endtime="20190319 01:53:41.615"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:41.616" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '1000000000', '1000000000', ['ApplyBecomeMediator', '...</msg>
<status status="PASS" starttime="20190319 01:53:41.615" endtime="20190319 01:53:41.616"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:41.616" level="INFO">Creating Session using : alias=ApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:41.616" endtime="20190319 01:53:41.616"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:41.618" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:41.621" level="INFO">Post Request using : alias=ApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn", "P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn", "1000000000", "1000000000", ["ApplyBecomeMediator", "{\"key\":\"value\"}"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:41.621" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.617" endtime="20190319 01:53:41.621"></status>
</kw>
<msg timestamp="20190319 01:53:41.622" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:41.614" endtime="20190319 01:53:41.622"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:53:41.622" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"80c63f3541180474932c24fdfb40de24b68b513cefef73cae6a9c60b6fb1244d"}
</msg>
<status status="PASS" starttime="20190319 01:53:41.622" endtime="20190319 01:53:41.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:53:49.624" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:53:41.622" endtime="20190319 01:53:49.624"></status>
</kw>
<msg timestamp="20190319 01:53:49.625" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"80c63f3541180474932c24fdfb40de24b68b513cefef73cae6a9c60b6fb1244d"}
</msg>
<status status="PASS" starttime="20190319 01:53:41.611" endtime="20190319 01:53:49.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:49.628" level="INFO">{"jsonrpc":"2.0","id":"1","result":"80c63f3541180474932c24fdfb40de24b68b513cefef73cae6a9c60b6fb1244d"}
</msg>
<status status="PASS" starttime="20190319 01:53:49.627" endtime="20190319 01:53:49.629"></status>
</kw>
<kw name="getBecomeMediatorApplyList" library="getBecomeMediatorApplyListParams">
<assign>
<var>@{addressList1}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:49.635" level="INFO">${one} = ['GetBecomeMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:53:49.633" endtime="20190319 01:53:49.635"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:49.638" level="INFO">${two} = [['GetBecomeMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:53:49.637" endtime="20190319 01:53:49.638"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:49.643" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:49.642" endtime="20190319 01:53:49.643"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:49.645" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBecomeMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:49.644" endtime="20190319 01:53:49.645"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:49.646" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:49.646" endtime="20190319 01:53:49.647"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:49.649" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:49.655" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBecomeMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:49.655" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:49.647" endtime="20190319 01:53:49.655"></status>
</kw>
<msg timestamp="20190319 01:53:49.655" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:49.639" endtime="20190319 01:53:49.655"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:49.656" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:49.656" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:49.657" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:49.656" endtime="20190319 01:53:49.657"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:49.658" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:49.658" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:49.657" endtime="20190319 01:53:49.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:49.659" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:49.659" endtime="20190319 01:53:49.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:53:49.660" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:53:49.660" endtime="20190319 01:53:49.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:49.661" endtime="20190319 01:53:49.662"></status>
</kw>
<msg timestamp="20190319 01:53:49.662" level="INFO">@{addressList} = [ P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn ]</msg>
<status status="PASS" starttime="20190319 01:53:49.661" endtime="20190319 01:53:49.662"></status>
</kw>
<msg timestamp="20190319 01:53:49.662" level="INFO">@{addressList1} = [ P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn ]</msg>
<status status="PASS" starttime="20190319 01:53:49.630" endtime="20190319 01:53:49.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{addressList1}</arg>
</arguments>
<msg timestamp="20190319 01:53:49.663" level="INFO">P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn</msg>
<status status="PASS" starttime="20190319 01:53:49.663" endtime="20190319 01:53:49.663"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${mediatorAddr_02}' in @{addressList1}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:49.664" endtime="20190319 01:53:49.664"></status>
</kw>
<kw name="handleForApplyBecomeMediator" library="handleForApplyBecomeMediatorParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="基金会处理申请所需参数" library="handleForApplyBecomeMediatorParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${基金会处理申请所需参数 }</var>
</assign>
<kw name="获取Mediator申请加入列表" library="getBecomeMediatorApplyListParams">
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${获取Mediator申请加入列表 }</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:49.667" level="INFO">${one} = ['GetBecomeMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:53:49.666" endtime="20190319 01:53:49.667"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:49.667" level="INFO">${two} = [['GetBecomeMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:53:49.667" endtime="20190319 01:53:49.667"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:49.668" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:49.668" endtime="20190319 01:53:49.668"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:49.669" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBecomeMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:49.669" endtime="20190319 01:53:49.670"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:49.670" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:49.670" endtime="20190319 01:53:49.670"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:49.672" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:49.676" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBecomeMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:49.676" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:49.671" endtime="20190319 01:53:49.676"></status>
</kw>
<msg timestamp="20190319 01:53:49.676" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:49.668" endtime="20190319 01:53:49.676"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:49.677" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:49.677" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:49.677" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:49.676" endtime="20190319 01:53:49.677"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:49.678" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:49.678" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:49.677" endtime="20190319 01:53:49.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>set variable</arg>
<arg>""</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:49.678" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:49.678" endtime="20190319 01:53:49.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>set variable</arg>
<arg>""</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20190319 01:53:49.679" level="INFO">${time} = None</msg>
<status status="PASS" starttime="20190319 01:53:49.679" endtime="20190319 01:53:49.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addresses['address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:49.680" endtime="20190319 01:53:49.680"></status>
</kw>
<msg timestamp="20190319 01:53:49.680" level="INFO">${addresses} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:53:49.679" endtime="20190319 01:53:49.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[times['time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${times}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[times['time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:49.681" endtime="20190319 01:53:49.682"></status>
</kw>
<msg timestamp="20190319 01:53:49.682" level="INFO">${times} = [862769]</msg>
<status status="PASS" starttime="20190319 01:53:49.681" endtime="20190319 01:53:49.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>set variable</arg>
<arg>${addresses}[${index}]</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}[${index}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:49.682" endtime="20190319 01:53:49.683"></status>
</kw>
<msg timestamp="20190319 01:53:49.683" level="INFO">${address} = P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn</msg>
<status status="PASS" starttime="20190319 01:53:49.682" endtime="20190319 01:53:49.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>set variable</arg>
<arg>${times}[${index}]</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${times}[${index}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:49.684" endtime="20190319 01:53:49.684"></status>
</kw>
<msg timestamp="20190319 01:53:49.684" level="INFO">${time} = 862769</msg>
<status status="PASS" starttime="20190319 01:53:49.683" endtime="20190319 01:53:49.684"></status>
</kw>
<msg timestamp="20190319 01:53:49.684" level="INFO">${获取Mediator申请加入列表 } = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 862769]</msg>
<status status="PASS" starttime="20190319 01:53:49.666" endtime="20190319 01:53:49.684"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HandleForApplyBecomeMediator</arg>
<arg>ok</arg>
<arg>${获取Mediator申请加入列表}[0]</arg>
</arguments>
<assign>
<var>${1}</var>
</assign>
<msg timestamp="20190319 01:53:49.685" level="INFO">${1} = ['HandleForApplyBecomeMediator', 'ok', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:53:49.685" endtime="20190319 01:53:49.685"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:49.686" level="INFO">${one} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyBecomeMediator', 'ok', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:53:49.685" endtime="20190319 01:53:49.686"></status>
</kw>
<msg timestamp="20190319 01:53:49.686" level="INFO">${基金会处理申请所需参数 } = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyBecomeMediator', 'ok', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:53:49.665" endtime="20190319 01:53:49.686"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForApplyBecomeMediator</arg>
<arg>${基金会处理申请所需参数 }</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:49.687" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:49.687" endtime="20190319 01:53:49.687"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:49.688" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForApplyBecomeMed...</msg>
<status status="PASS" starttime="20190319 01:53:49.687" endtime="20190319 01:53:49.688"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:49.688" level="INFO">Creating Session using : alias=HandleForApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:49.688" endtime="20190319 01:53:49.689"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:49.691" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:49.693" level="INFO">Post Request using : alias=HandleForApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "1000000000", "1000000000", ["HandleForApplyBecomeMediator", "ok", "P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:49.694" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:49.689" endtime="20190319 01:53:49.694"></status>
</kw>
<msg timestamp="20190319 01:53:49.694" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:49.686" endtime="20190319 01:53:49.694"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:53:49.695" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"0b5349a96a31501ed5bad2dca1657fdd55a4054b2939e4e21c24b5f06e45378b"}
</msg>
<status status="PASS" starttime="20190319 01:53:49.694" endtime="20190319 01:53:49.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:53:57.696" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:53:49.695" endtime="20190319 01:53:57.696"></status>
</kw>
<msg timestamp="20190319 01:53:57.697" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"0b5349a96a31501ed5bad2dca1657fdd55a4054b2939e4e21c24b5f06e45378b"}
</msg>
<status status="PASS" starttime="20190319 01:53:49.664" endtime="20190319 01:53:57.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:53:57.698" level="INFO">{"jsonrpc":"2.0","id":"1","result":"0b5349a96a31501ed5bad2dca1657fdd55a4054b2939e4e21c24b5f06e45378b"}
</msg>
<status status="PASS" starttime="20190319 01:53:57.697" endtime="20190319 01:53:57.698"></status>
</kw>
<kw name="getAgreeForBecomeMediatorList" library="getAgreeForBecomeMediatorListParams">
<assign>
<var>@{addressList2}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAgreeForBecomeMediatorList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:57.700" level="INFO">${one} = ['GetAgreeForBecomeMediatorList']</msg>
<status status="PASS" starttime="20190319 01:53:57.699" endtime="20190319 01:53:57.700"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:57.700" level="INFO">${two} = [['GetAgreeForBecomeMediatorList']]</msg>
<status status="PASS" starttime="20190319 01:53:57.700" endtime="20190319 01:53:57.700"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAgreeForBecomeMediatorList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:57.702" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:57.701" endtime="20190319 01:53:57.702"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:57.702" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetAgreeForBecomeMediatorList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:53:57.702" endtime="20190319 01:53:57.702"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:57.703" level="INFO">Creating Session using : alias=GetAgreeForBecomeMediatorList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:57.703" endtime="20190319 01:53:57.703"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:57.705" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:57.708" level="INFO">Post Request using : alias=GetAgreeForBecomeMediatorList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetAgreeForBecomeMediatorList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:57.708" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:57.703" endtime="20190319 01:53:57.708"></status>
</kw>
<msg timestamp="20190319 01:53:57.708" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:57.701" endtime="20190319 01:53:57.708"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:53:57.709" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:53:57.709" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:53:57.709" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:53:57.709" endtime="20190319 01:53:57.709"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:53:57.710" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:53:57.710" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:53:57.710" endtime="20190319 01:53:57.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:53:57.711" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:53:57.710" endtime="20190319 01:53:57.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${addressList}</var>
</assign>
<msg timestamp="20190319 01:53:57.711" level="INFO">${addressList} = None</msg>
<status status="PASS" starttime="20190319 01:53:57.711" endtime="20190319 01:53:57.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:57.712" endtime="20190319 01:53:57.713"></status>
</kw>
<msg timestamp="20190319 01:53:57.713" level="INFO">${addressList} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:53:57.712" endtime="20190319 01:53:57.713"></status>
</kw>
<msg timestamp="20190319 01:53:57.713" level="INFO">@{addressList2} = [ P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn ]</msg>
<status status="PASS" starttime="20190319 01:53:57.698" endtime="20190319 01:53:57.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{addressList2}</arg>
</arguments>
<msg timestamp="20190319 01:53:57.714" level="INFO">P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn</msg>
<status status="PASS" starttime="20190319 01:53:57.714" endtime="20190319 01:53:57.714"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${mediatorAddr_02}' in @{addressList2}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:53:57.714" endtime="20190319 01:53:57.715"></status>
</kw>
<kw name="mediatorPayToDepositContract" library="mediatorPayToDepositContractParams">
<arguments>
<arg>${mediatorAddr_02}</arg>
<arg>200000000000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mediator交付保证金所需参数" library="mediatorPayToDepositContractParams">
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<assign>
<var>${Mediator交付保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MediatorPayToDepositContract</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:53:57.716" level="INFO">${one} = ['MediatorPayToDepositContract']</msg>
<status status="PASS" starttime="20190319 01:53:57.716" endtime="20190319 01:53:57.717"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:53:57.717" level="INFO">${two} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '200000000000', '1000000000', ['MediatorPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:53:57.717" endtime="20190319 01:53:57.717"></status>
</kw>
<msg timestamp="20190319 01:53:57.717" level="INFO">${Mediator交付保证金所需参数} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '200000000000', '1000000000', ['MediatorPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:53:57.716" endtime="20190319 01:53:57.717"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>MediatorPayToDepositContract</arg>
<arg>${Mediator交付保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:53:57.719" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:53:57.718" endtime="20190319 01:53:57.719"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:53:57.720" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '200000000000', '1000000000', ['MediatorPayToDepositC...</msg>
<status status="PASS" starttime="20190319 01:53:57.719" endtime="20190319 01:53:57.720"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:53:57.720" level="INFO">Creating Session using : alias=MediatorPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:53:57.720" endtime="20190319 01:53:57.721"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:53:57.722" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:53:57.725" level="INFO">Post Request using : alias=MediatorPayToDepositContract, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "200000000000", "1000000000", ["MediatorPayToDepositContract"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:53:57.725" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:57.721" endtime="20190319 01:53:57.725"></status>
</kw>
<msg timestamp="20190319 01:53:57.725" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:53:57.718" endtime="20190319 01:53:57.726"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:53:57.726" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"52b80d14f52e457cb28775a4f5dc5cd584de0f933c70c0aa2b3198beef7b2e82"}
</msg>
<status status="PASS" starttime="20190319 01:53:57.726" endtime="20190319 01:53:57.726"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:54:05.727" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:53:57.726" endtime="20190319 01:54:05.728"></status>
</kw>
<msg timestamp="20190319 01:54:05.729" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"52b80d14f52e457cb28775a4f5dc5cd584de0f933c70c0aa2b3198beef7b2e82"}
</msg>
<status status="PASS" starttime="20190319 01:53:57.715" endtime="20190319 01:54:05.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:05.732" level="INFO">{"jsonrpc":"2.0","id":"1","result":"52b80d14f52e457cb28775a4f5dc5cd584de0f933c70c0aa2b3198beef7b2e82"}
</msg>
<status status="PASS" starttime="20190319 01:54:05.731" endtime="20190319 01:54:05.732"></status>
</kw>
<kw name="getListForMediatorCandidate" library="getListForMediatorCandidateParams">
<assign>
<var>@{addressList3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:05.738" level="INFO">${one} = ['GetListForMediatorCandidate']</msg>
<status status="PASS" starttime="20190319 01:54:05.737" endtime="20190319 01:54:05.738"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:05.740" level="INFO">${two} = [['GetListForMediatorCandidate']]</msg>
<status status="PASS" starttime="20190319 01:54:05.739" endtime="20190319 01:54:05.740"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:05.745" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:05.744" endtime="20190319 01:54:05.745"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:05.747" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForMediatorCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:05.746" endtime="20190319 01:54:05.748"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:05.750" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:05.749" endtime="20190319 01:54:05.750"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:05.756" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:05.766" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForMediatorCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:05.767" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:05.751" endtime="20190319 01:54:05.767"></status>
</kw>
<msg timestamp="20190319 01:54:05.767" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:05.741" endtime="20190319 01:54:05.768"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:05.769" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:54:05.769" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:05.769" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:54:05.768" endtime="20190319 01:54:05.769"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:54:05.771" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:54:05.771" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:54:05.770" endtime="20190319 01:54:05.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:54:05.772" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:54:05.771" endtime="20190319 01:54:05.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:54:05.773" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:54:05.773" endtime="20190319 01:54:05.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:05.775" endtime="20190319 01:54:05.775"></status>
</kw>
<msg timestamp="20190319 01:54:05.775" level="INFO">@{addressList} = [ P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn ]</msg>
<status status="PASS" starttime="20190319 01:54:05.774" endtime="20190319 01:54:05.776"></status>
</kw>
<msg timestamp="20190319 01:54:05.776" level="INFO">@{addressList3} = [ P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn ]</msg>
<status status="PASS" starttime="20190319 01:54:05.734" endtime="20190319 01:54:05.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{addressList3}</arg>
</arguments>
<msg timestamp="20190319 01:54:05.777" level="INFO">P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn</msg>
<status status="PASS" starttime="20190319 01:54:05.776" endtime="20190319 01:54:05.777"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${mediatorAddr_02}' in @{addressList3}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:05.778" endtime="20190319 01:54:05.778"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${mediatorAddr_02}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:05.780" level="INFO">${one} = ['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:54:05.780" endtime="20190319 01:54:05.781"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:05.781" level="INFO">${two} = [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:54:05.781" endtime="20190319 01:54:05.781"></status>
</kw>
<msg timestamp="20190319 01:54:05.782" level="INFO">${11} = [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:54:05.779" endtime="20190319 01:54:05.782"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:05.783" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:05.783" endtime="20190319 01:54:05.783"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:05.784" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:05.783" endtime="20190319 01:54:05.784"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:05.784" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:05.784" endtime="20190319 01:54:05.785"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:05.786" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:05.789" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:05.789" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:05.785" endtime="20190319 01:54:05.789"></status>
</kw>
<msg timestamp="20190319 01:54:05.790" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:05.782" endtime="20190319 01:54:05.790"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:05.790" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":200000000000,\"last_modify_time\":862769,\"enter_time\":862769,\"pay_values\":[{\"pay_tokens\":{\"amount\":200000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":null,\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:54:05.790" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:05.790" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":200000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":200000000000,"asset":"PTN","address":""},"pay_...</msg>
<status status="PASS" starttime="20190319 01:54:05.790" endtime="20190319 01:54:05.791"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:54:05.791" level="INFO">${balance} = {"total_amount":200000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":200000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"fo...</msg>
<status status="PASS" starttime="20190319 01:54:05.791" endtime="20190319 01:54:05.791"></status>
</kw>
<msg timestamp="20190319 01:54:05.791" level="INFO">${result} = {"total_amount":200000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":200000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"fo...</msg>
<status status="PASS" starttime="20190319 01:54:05.779" endtime="20190319 01:54:05.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:05.792" level="INFO">{"total_amount":200000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":200000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:54:05.792" endtime="20190319 01:54:05.792"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:05.793" endtime="20190319 01:54:05.793"></status>
</kw>
<kw name="applyForForfeitureDeposit" library="applyForForfeitureDepositParams">
<arguments>
<arg>${anotherAddr}</arg>
<arg>${mediatorAddr_02}</arg>
<arg>200000000000</arg>
<arg>Mediator</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="某节点申请没收候选列表某账户所需参数" library="applyForForfeitureDepositParams">
<arguments>
<arg>${whoApply}</arg>
<arg>${forfeitureAddr}</arg>
<arg>${forfertureAmounts}</arg>
<arg>${role}</arg>
</arguments>
<assign>
<var>${某节点申请没收候选列表某账户所需参数 }</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>ApplyForForfeitureDeposit</arg>
<arg>${forfeitureAddr}</arg>
<arg>${forfertureAmounts}</arg>
<arg>${role}</arg>
</arguments>
<assign>
<var>${lala}</var>
</assign>
<msg timestamp="20190319 01:54:05.795" level="INFO">${lala} = ['ApplyForForfeitureDeposit', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '200000000000', 'Mediator']</msg>
<status status="PASS" starttime="20190319 01:54:05.795" endtime="20190319 01:54:05.795"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${whoApply}</arg>
<arg>${whoApply}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${lala}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:05.796" level="INFO">${one} = ['P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM', 'P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM', '1000000000', '1000000000', ['ApplyForForfeitureDeposit', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '200000000000', 'Mediato...</msg>
<status status="PASS" starttime="20190319 01:54:05.795" endtime="20190319 01:54:05.796"></status>
</kw>
<msg timestamp="20190319 01:54:05.796" level="INFO">${某节点申请没收候选列表某账户所需参数 } = ['P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM', 'P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM', '1000000000', '1000000000', ['ApplyForForfeitureDeposit', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '200000000000', 'Mediato...</msg>
<status status="PASS" starttime="20190319 01:54:05.794" endtime="20190319 01:54:05.796"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>ApplyForForfeitureDeposit</arg>
<arg>${某节点申请没收候选列表某账户所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:05.797" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:05.797" endtime="20190319 01:54:05.797"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:05.798" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM', 'P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM', '1000000000', '1000000000', ['ApplyForForfeitureDepos...</msg>
<status status="PASS" starttime="20190319 01:54:05.798" endtime="20190319 01:54:05.798"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:05.799" level="INFO">Creating Session using : alias=ApplyForForfeitureDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:05.799" endtime="20190319 01:54:05.799"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:05.801" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:05.804" level="INFO">Post Request using : alias=ApplyForForfeitureDeposit, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM", "P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM", "1000000000", "1000000000", ["ApplyForForfeitureDeposit", "P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn", "200000000000", "Mediator"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:05.804" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:05.800" endtime="20190319 01:54:05.804"></status>
</kw>
<msg timestamp="20190319 01:54:05.804" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:05.796" endtime="20190319 01:54:05.804"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:05.805" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"96ee3d8a78c7f3e96f478764a03a4e2467d8cb470a2413e18a542690451c2f6e"}
</msg>
<status status="PASS" starttime="20190319 01:54:05.805" endtime="20190319 01:54:05.805"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:54:13.807" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:54:05.805" endtime="20190319 01:54:13.808"></status>
</kw>
<msg timestamp="20190319 01:54:13.809" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"96ee3d8a78c7f3e96f478764a03a4e2467d8cb470a2413e18a542690451c2f6e"}
</msg>
<status status="PASS" starttime="20190319 01:54:05.793" endtime="20190319 01:54:13.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:13.812" level="INFO">{"jsonrpc":"2.0","id":"1","result":"96ee3d8a78c7f3e96f478764a03a4e2467d8cb470a2413e18a542690451c2f6e"}
</msg>
<status status="PASS" starttime="20190319 01:54:13.810" endtime="20190319 01:54:13.812"></status>
</kw>
<kw name="getListForForfeitureApplication" library="getListForForfeitureApplicationParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForForfeitureApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:13.816" level="INFO">${one} = ['GetListForForfeitureApplication']</msg>
<status status="PASS" starttime="20190319 01:54:13.815" endtime="20190319 01:54:13.816"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:13.819" level="INFO">${two} = [['GetListForForfeitureApplication']]</msg>
<status status="PASS" starttime="20190319 01:54:13.817" endtime="20190319 01:54:13.819"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForForfeitureApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:13.824" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:13.822" endtime="20190319 01:54:13.824"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:13.827" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForForfeitureApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:13.825" endtime="20190319 01:54:13.827"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:13.829" level="INFO">Creating Session using : alias=GetListForForfeitureApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:13.828" endtime="20190319 01:54:13.831"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:13.836" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:13.839" level="INFO">Post Request using : alias=GetListForForfeitureApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForForfeitureApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:13.839" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:13.832" endtime="20190319 01:54:13.839"></status>
</kw>
<msg timestamp="20190319 01:54:13.839" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:13.820" endtime="20190319 01:54:13.839"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:13.840" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"[{\"apply_address\":\"P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM\",\"forfeiture_address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"apply_tokens\":{\"amount\":200000000000...</msg>
<status status="PASS" starttime="20190319 01:54:13.839" endtime="20190319 01:54:13.840"></status>
</kw>
<msg timestamp="20190319 01:54:13.840" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"[{\"apply_address\":\"P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM\",\"forfeiture_address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"apply_tokens\":{\"amount\":200000000000...</msg>
<status status="PASS" starttime="20190319 01:54:13.813" endtime="20190319 01:54:13.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:13.841" level="INFO">{"jsonrpc":"2.0","id":"1","result":"[{\"apply_address\":\"P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM\",\"forfeiture_address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"apply_tokens\":{\"amount\":200000000000,\"asset\":\"PTN\",\"address\":\"\"},\"forfeiture_role\":\"Mediator\",\"apply_time\":1552985646}]"}
</msg>
<status status="PASS" starttime="20190319 01:54:13.841" endtime="20190319 01:54:13.841"></status>
</kw>
<kw name="handleForForfeitureApplication" library="handleForForfeitureApplicationParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>ok</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="基金会处理没收请求所需参数" library="handleForForfeitureApplicationParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>${isAgree}</arg>
</arguments>
<assign>
<var>${基金会处理没收请求所需参数}</var>
</assign>
<kw name="获取没收保证金申请列表" library="getListForForfeitureApplicationParams">
<assign>
<var>${获取没收保证金申请列表}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForForfeitureApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:13.843" level="INFO">${one} = ['GetListForForfeitureApplication']</msg>
<status status="PASS" starttime="20190319 01:54:13.843" endtime="20190319 01:54:13.843"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:13.844" level="INFO">${two} = [['GetListForForfeitureApplication']]</msg>
<status status="PASS" starttime="20190319 01:54:13.843" endtime="20190319 01:54:13.844"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForForfeitureApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:13.845" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:13.844" endtime="20190319 01:54:13.845"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:13.846" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForForfeitureApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:13.845" endtime="20190319 01:54:13.846"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:13.846" level="INFO">Creating Session using : alias=GetListForForfeitureApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:13.846" endtime="20190319 01:54:13.847"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:13.848" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:13.851" level="INFO">Post Request using : alias=GetListForForfeitureApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForForfeitureApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:13.851" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:13.847" endtime="20190319 01:54:13.851"></status>
</kw>
<msg timestamp="20190319 01:54:13.851" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:13.844" endtime="20190319 01:54:13.851"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:13.852" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"apply_address\":\"P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM\",\"forfeiture_address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"apply_tokens\":{\"amount\":200000000000,\"asset\":\"PTN\",\"address\":\"\"},\"forfeiture_role\":\"Mediator\",\"apply_time\":1552985646}]"}
 </msg>
<msg timestamp="20190319 01:54:13.852" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:13.852" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"apply_address":"P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM","forfeiture_address":"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn","apply_tokens":{"amount":200000000000,"asset...</msg>
<status status="PASS" starttime="20190319 01:54:13.852" endtime="20190319 01:54:13.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:54:13.853" level="INFO">[{"apply_address":"P1EK3bLyoDD7hw9dTpXG4zQCUe9W3TDgoYM","forfeiture_address":"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn","apply_tokens":{"amount":200000000000,"asset":"PTN","address":""},"forfeiture_role":"Mediator","apply_time":1552985646}]</msg>
<status status="PASS" starttime="20190319 01:54:13.852" endtime="20190319 01:54:13.853"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['forfeiture_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:54:13.854" level="INFO">${addresses} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:54:13.853" endtime="20190319 01:54:13.854"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[times['apply_time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${times}</var>
</assign>
<msg timestamp="20190319 01:54:13.854" level="INFO">${times} = [1552985646]</msg>
<status status="PASS" starttime="20190319 01:54:13.854" endtime="20190319 01:54:13.854"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}[0]</arg>
</arguments>
<assign>
<var>${address0}</var>
</assign>
<msg timestamp="20190319 01:54:13.855" level="INFO">${address0} = P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn</msg>
<status status="PASS" starttime="20190319 01:54:13.855" endtime="20190319 01:54:13.855"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${times}[0])</arg>
</arguments>
<assign>
<var>${strTime}</var>
</assign>
<msg timestamp="20190319 01:54:13.856" level="INFO">${strTime} = 1552985646</msg>
<status status="PASS" starttime="20190319 01:54:13.855" endtime="20190319 01:54:13.856"></status>
</kw>
<msg timestamp="20190319 01:54:13.856" level="INFO">${获取没收保证金申请列表} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '1552985646']</msg>
<status status="PASS" starttime="20190319 01:54:13.842" endtime="20190319 01:54:13.856"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HandleForForfeitureApplication</arg>
<arg>${获取没收保证金申请列表}[0]</arg>
<arg>${获取没收保证金申请列表}[1]</arg>
<arg>${isAgree}</arg>
</arguments>
<assign>
<var>${1}</var>
</assign>
<msg timestamp="20190319 01:54:13.857" level="INFO">${1} = ['HandleForForfeitureApplication', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '1552985646', 'ok']</msg>
<status status="PASS" starttime="20190319 01:54:13.856" endtime="20190319 01:54:13.857"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:13.857" level="INFO">${one} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForForfeitureApplication', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '1552985646', 'ok']...</msg>
<status status="PASS" starttime="20190319 01:54:13.857" endtime="20190319 01:54:13.857"></status>
</kw>
<msg timestamp="20190319 01:54:13.858" level="INFO">${基金会处理没收请求所需参数} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForForfeitureApplication', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', '1552985646', 'ok']...</msg>
<status status="PASS" starttime="20190319 01:54:13.842" endtime="20190319 01:54:13.858"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForForfeitureApplication</arg>
<arg>${基金会处理没收请求所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:13.859" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:13.858" endtime="20190319 01:54:13.859"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:13.860" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForForfeitureAppl...</msg>
<status status="PASS" starttime="20190319 01:54:13.859" endtime="20190319 01:54:13.860"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:13.860" level="INFO">Creating Session using : alias=HandleForForfeitureApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:13.860" endtime="20190319 01:54:13.860"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:13.862" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:13.865" level="INFO">Post Request using : alias=HandleForForfeitureApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "1000000000", "1000000000", ["HandleForForfeitureApplication", "P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn", "1552985646", "ok"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:13.865" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:13.861" endtime="20190319 01:54:13.865"></status>
</kw>
<msg timestamp="20190319 01:54:13.865" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:13.858" endtime="20190319 01:54:13.865"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:13.867" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"bc9324c5566eb6547c9267d879d6cb2a6083be18358e5b272757db44382b9ee8"}
</msg>
<status status="PASS" starttime="20190319 01:54:13.866" endtime="20190319 01:54:13.867"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:54:21.870" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:54:13.868" endtime="20190319 01:54:21.871"></status>
</kw>
<msg timestamp="20190319 01:54:21.872" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"bc9324c5566eb6547c9267d879d6cb2a6083be18358e5b272757db44382b9ee8"}
</msg>
<status status="PASS" starttime="20190319 01:54:13.841" endtime="20190319 01:54:21.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:21.874" level="INFO">{"jsonrpc":"2.0","id":"1","result":"bc9324c5566eb6547c9267d879d6cb2a6083be18358e5b272757db44382b9ee8"}
</msg>
<status status="PASS" starttime="20190319 01:54:21.873" endtime="20190319 01:54:21.875"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${mediatorAddr_02}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:21.883" level="INFO">${one} = ['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:54:21.881" endtime="20190319 01:54:21.883"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:21.886" level="INFO">${two} = [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:54:21.884" endtime="20190319 01:54:21.886"></status>
</kw>
<msg timestamp="20190319 01:54:21.887" level="INFO">${11} = [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:54:21.879" endtime="20190319 01:54:21.888"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:21.893" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:21.891" endtime="20190319 01:54:21.893"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:21.896" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:21.894" endtime="20190319 01:54:21.896"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:21.898" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:21.897" endtime="20190319 01:54:21.900"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:21.906" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:21.908" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:21.908" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.901" endtime="20190319 01:54:21.908"></status>
</kw>
<msg timestamp="20190319 01:54:21.908" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.889" endtime="20190319 01:54:21.909"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:21.909" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"balance is nil"}
 </msg>
<msg timestamp="20190319 01:54:21.909" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:21.909" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': 'balance is nil'}</msg>
<status status="PASS" starttime="20190319 01:54:21.909" endtime="20190319 01:54:21.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:54:21.910" level="INFO">${balance} = balance is nil</msg>
<status status="PASS" starttime="20190319 01:54:21.910" endtime="20190319 01:54:21.910"></status>
</kw>
<msg timestamp="20190319 01:54:21.910" level="INFO">${result} = balance is nil</msg>
<status status="PASS" starttime="20190319 01:54:21.877" endtime="20190319 01:54:21.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:21.911" level="INFO">balance is nil</msg>
<status status="PASS" starttime="20190319 01:54:21.911" endtime="20190319 01:54:21.911"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:21.911" endtime="20190319 01:54:21.912"></status>
</kw>
<kw name="getBecomeMediatorApplyList" library="getBecomeMediatorApplyListParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:21.913" level="INFO">${one} = ['GetBecomeMediatorApplyList']</msg>
<status status="PASS" starttime="20190319 01:54:21.912" endtime="20190319 01:54:21.913"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:21.913" level="INFO">${two} = [['GetBecomeMediatorApplyList']]</msg>
<status status="PASS" starttime="20190319 01:54:21.913" endtime="20190319 01:54:21.913"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:21.915" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:21.914" endtime="20190319 01:54:21.915"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:21.915" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBecomeMediatorApplyList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:21.915" endtime="20190319 01:54:21.915"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:21.916" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:21.916" endtime="20190319 01:54:21.916"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:21.918" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:21.920" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBecomeMediatorApplyList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:21.921" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.916" endtime="20190319 01:54:21.921"></status>
</kw>
<msg timestamp="20190319 01:54:21.921" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.914" endtime="20190319 01:54:21.921"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:21.922" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:54:21.922" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:21.922" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:54:21.921" endtime="20190319 01:54:21.922"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:54:21.922" level="INFO">Length is 2</msg>
<msg timestamp="20190319 01:54:21.922" level="INFO">${resultLen} = 2</msg>
<status status="PASS" starttime="20190319 01:54:21.922" endtime="20190319 01:54:21.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:54:21.923" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:54:21.923" endtime="20190319 01:54:21.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:54:21.924" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:54:21.923" endtime="20190319 01:54:21.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:21.925" endtime="20190319 01:54:21.925"></status>
</kw>
<msg timestamp="20190319 01:54:21.925" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:54:21.924" endtime="20190319 01:54:21.925"></status>
</kw>
<msg timestamp="20190319 01:54:21.926" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:54:21.912" endtime="20190319 01:54:21.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:21.926" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:54:21.926" endtime="20190319 01:54:21.926"></status>
</kw>
<kw name="getAgreeForBecomeMediatorList" library="getAgreeForBecomeMediatorListParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAgreeForBecomeMediatorList</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:21.927" level="INFO">${one} = ['GetAgreeForBecomeMediatorList']</msg>
<status status="PASS" starttime="20190319 01:54:21.927" endtime="20190319 01:54:21.927"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:21.928" level="INFO">${two} = [['GetAgreeForBecomeMediatorList']]</msg>
<status status="PASS" starttime="20190319 01:54:21.928" endtime="20190319 01:54:21.928"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAgreeForBecomeMediatorList</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:21.929" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:21.929" endtime="20190319 01:54:21.929"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:21.930" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetAgreeForBecomeMediatorList']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:21.929" endtime="20190319 01:54:21.930"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:21.930" level="INFO">Creating Session using : alias=GetAgreeForBecomeMediatorList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:21.930" endtime="20190319 01:54:21.931"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:21.932" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:21.935" level="INFO">Post Request using : alias=GetAgreeForBecomeMediatorList, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetAgreeForBecomeMediatorList"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:21.935" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.931" endtime="20190319 01:54:21.935"></status>
</kw>
<msg timestamp="20190319 01:54:21.935" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.928" endtime="20190319 01:54:21.935"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:21.936" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:54:21.936" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:21.936" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:54:21.936" endtime="20190319 01:54:21.936"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:54:21.937" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:54:21.937" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:54:21.937" endtime="20190319 01:54:21.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:54:21.938" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:54:21.937" endtime="20190319 01:54:21.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${addressList}</var>
</assign>
<msg timestamp="20190319 01:54:21.938" level="INFO">${addressList} = None</msg>
<status status="PASS" starttime="20190319 01:54:21.938" endtime="20190319 01:54:21.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:21.939" endtime="20190319 01:54:21.939"></status>
</kw>
<msg timestamp="20190319 01:54:21.940" level="INFO">${addressList} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:54:21.939" endtime="20190319 01:54:21.940"></status>
</kw>
<msg timestamp="20190319 01:54:21.940" level="INFO">${result} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:54:21.927" endtime="20190319 01:54:21.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:21.940" level="INFO">['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:54:21.940" endtime="20190319 01:54:21.941"></status>
</kw>
<kw name="getListForMediatorCandidate" library="getListForMediatorCandidateParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:21.942" level="INFO">${one} = ['GetListForMediatorCandidate']</msg>
<status status="PASS" starttime="20190319 01:54:21.941" endtime="20190319 01:54:21.942"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:21.942" level="INFO">${two} = [['GetListForMediatorCandidate']]</msg>
<status status="PASS" starttime="20190319 01:54:21.942" endtime="20190319 01:54:21.942"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:21.943" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:21.943" endtime="20190319 01:54:21.943"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:21.944" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForMediatorCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:21.944" endtime="20190319 01:54:21.944"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:21.945" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:21.944" endtime="20190319 01:54:21.945"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:21.947" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:21.950" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForMediatorCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:21.950" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.945" endtime="20190319 01:54:21.950"></status>
</kw>
<msg timestamp="20190319 01:54:21.950" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.942" endtime="20190319 01:54:21.950"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:21.951" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:54:21.951" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:21.951" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:54:21.950" endtime="20190319 01:54:21.951"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:54:21.951" level="INFO">Length is 2</msg>
<msg timestamp="20190319 01:54:21.951" level="INFO">${resultLen} = 2</msg>
<status status="PASS" starttime="20190319 01:54:21.951" endtime="20190319 01:54:21.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:54:21.952" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:54:21.952" endtime="20190319 01:54:21.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:54:21.953" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:54:21.953" endtime="20190319 01:54:21.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:21.954" endtime="20190319 01:54:21.954"></status>
</kw>
<msg timestamp="20190319 01:54:21.954" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:54:21.953" endtime="20190319 01:54:21.954"></status>
</kw>
<msg timestamp="20190319 01:54:21.954" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:54:21.941" endtime="20190319 01:54:21.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:21.955" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:54:21.955" endtime="20190319 01:54:21.955"></status>
</kw>
<kw name="getListForForfeitureApplication" library="getListForForfeitureApplicationParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForForfeitureApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:21.956" level="INFO">${one} = ['GetListForForfeitureApplication']</msg>
<status status="PASS" starttime="20190319 01:54:21.956" endtime="20190319 01:54:21.956"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:21.957" level="INFO">${two} = [['GetListForForfeitureApplication']]</msg>
<status status="PASS" starttime="20190319 01:54:21.956" endtime="20190319 01:54:21.957"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForForfeitureApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:21.958" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:21.958" endtime="20190319 01:54:21.958"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:21.959" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForForfeitureApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:21.958" endtime="20190319 01:54:21.959"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:21.959" level="INFO">Creating Session using : alias=GetListForForfeitureApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:21.959" endtime="20190319 01:54:21.960"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:21.961" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:21.964" level="INFO">Post Request using : alias=GetListForForfeitureApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForForfeitureApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:21.964" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.960" endtime="20190319 01:54:21.964"></status>
</kw>
<msg timestamp="20190319 01:54:21.964" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.957" endtime="20190319 01:54:21.964"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:21.965" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"[]"}
</msg>
<status status="PASS" starttime="20190319 01:54:21.964" endtime="20190319 01:54:21.965"></status>
</kw>
<msg timestamp="20190319 01:54:21.965" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"[]"}
</msg>
<status status="PASS" starttime="20190319 01:54:21.955" endtime="20190319 01:54:21.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:21.966" level="INFO">{"jsonrpc":"2.0","id":"1","result":"[]"}
</msg>
<status status="PASS" starttime="20190319 01:54:21.965" endtime="20190319 01:54:21.966"></status>
</kw>
<doc>某节点申请加入mediator-》进入申请列表-》基金会同意-》进入同意列表-》节点加入保证金（足够）-》进入候选列表-》社区节点申请没收改地址所以保证金-》基金会同意，此时，只有同意列表不为空，其他的为空。</doc>
<status status="PASS" starttime="20190319 01:53:41.593" endtime="20190319 01:54:21.966" critical="yes"></status>
</test>
<test id="s1-t3" name="Business_03">
<kw name="juryPayToDepositContract" library="juryPayToDepositContractParams">
<arguments>
<arg>${juryAddr_01}</arg>
<arg>40000000000</arg>
</arguments>
<assign>
<var>${resul}</var>
</assign>
<kw name="Jury交付保证金所需参数" library="juryPayToDepositContractParams">
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<assign>
<var>${Jury交付保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>JuryPayToDepositContract</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:21.979" level="INFO">${one} = ['JuryPayToDepositContract']</msg>
<status status="PASS" starttime="20190319 01:54:21.979" endtime="20190319 01:54:21.979"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:21.980" level="INFO">${two} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '40000000000', '1000000000', ['JuryPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:54:21.980" endtime="20190319 01:54:21.980"></status>
</kw>
<msg timestamp="20190319 01:54:21.981" level="INFO">${Jury交付保证金所需参数} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '40000000000', '1000000000', ['JuryPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:54:21.979" endtime="20190319 01:54:21.981"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>JuryPayToDepositContract</arg>
<arg>${Jury交付保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:21.982" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:21.982" endtime="20190319 01:54:21.982"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:21.983" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '40000000000', '1000000000', ['JuryPayToDepositContra...</msg>
<status status="PASS" starttime="20190319 01:54:21.982" endtime="20190319 01:54:21.983"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:21.983" level="INFO">Creating Session using : alias=JuryPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:21.983" endtime="20190319 01:54:21.984"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:21.985" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:21.988" level="INFO">Post Request using : alias=JuryPayToDepositContract, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "40000000000", "1000000000", ["JuryPayToDepositContract"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:21.988" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.984" endtime="20190319 01:54:21.988"></status>
</kw>
<msg timestamp="20190319 01:54:21.988" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:21.981" endtime="20190319 01:54:21.988"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:21.989" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"3ed2f6ee319cb894bff30ecb8d64c8452ae0e4af9c618cbe0da2f6af10588399"}
</msg>
<status status="PASS" starttime="20190319 01:54:21.989" endtime="20190319 01:54:21.989"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:54:29.990" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:54:21.989" endtime="20190319 01:54:29.991"></status>
</kw>
<msg timestamp="20190319 01:54:29.992" level="INFO">${resul} = {"jsonrpc":"2.0","id":"1","result":"3ed2f6ee319cb894bff30ecb8d64c8452ae0e4af9c618cbe0da2f6af10588399"}
</msg>
<status status="PASS" starttime="20190319 01:54:21.978" endtime="20190319 01:54:29.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20190319 01:54:29.995" level="INFO">{"jsonrpc":"2.0","id":"1","result":"3ed2f6ee319cb894bff30ecb8d64c8452ae0e4af9c618cbe0da2f6af10588399"}
</msg>
<status status="PASS" starttime="20190319 01:54:29.994" endtime="20190319 01:54:29.995"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${juryAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:30.002" level="INFO">${one} = ['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:54:30.001" endtime="20190319 01:54:30.002"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:30.005" level="INFO">${two} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:54:30.003" endtime="20190319 01:54:30.005"></status>
</kw>
<msg timestamp="20190319 01:54:30.006" level="INFO">${11} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:54:29.999" endtime="20190319 01:54:30.006"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:30.011" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:30.009" endtime="20190319 01:54:30.011"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:30.014" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:30.012" endtime="20190319 01:54:30.014"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:30.016" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:30.015" endtime="20190319 01:54:30.018"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:30.025" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:30.035" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:30.036" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:30.019" endtime="20190319 01:54:30.036"></status>
</kw>
<msg timestamp="20190319 01:54:30.036" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:30.007" endtime="20190319 01:54:30.036"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:30.037" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":40000000000,\"last_modify_time\":862769,\"enter_time\":0,\"pay_values\":[{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":null,\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:54:30.037" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:30.037" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":40000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":8...</msg>
<status status="PASS" starttime="20190319 01:54:30.036" endtime="20190319 01:54:30.037"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:54:30.038" level="INFO">${balance} = {"total_amount":40000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forfeitur...</msg>
<status status="PASS" starttime="20190319 01:54:30.037" endtime="20190319 01:54:30.038"></status>
</kw>
<msg timestamp="20190319 01:54:30.038" level="INFO">${result} = {"total_amount":40000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forfeitur...</msg>
<status status="PASS" starttime="20190319 01:54:29.996" endtime="20190319 01:54:30.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:30.038" level="INFO">{"total_amount":40000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:54:30.038" endtime="20190319 01:54:30.039"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:30.039" endtime="20190319 01:54:30.040"></status>
</kw>
<kw name="getListForJuryCandidate" library="getListForJuryCandidateParams">
<assign>
<var>${resul}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:30.041" level="INFO">${one} = ['GetListForJuryCandidate']</msg>
<status status="PASS" starttime="20190319 01:54:30.040" endtime="20190319 01:54:30.041"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:30.042" level="INFO">${two} = [['GetListForJuryCandidate']]</msg>
<status status="PASS" starttime="20190319 01:54:30.041" endtime="20190319 01:54:30.042"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:30.043" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:30.042" endtime="20190319 01:54:30.043"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:30.044" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForJuryCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:30.043" endtime="20190319 01:54:30.044"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:30.044" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:30.044" endtime="20190319 01:54:30.044"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:30.046" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:30.049" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForJuryCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:30.049" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:30.045" endtime="20190319 01:54:30.049"></status>
</kw>
<msg timestamp="20190319 01:54:30.049" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:30.042" endtime="20190319 01:54:30.049"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:30.050" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:54:30.050" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:30.050" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:54:30.050" endtime="20190319 01:54:30.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:54:30.051" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:54:30.050" endtime="20190319 01:54:30.051"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:30.051" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:54:30.051" endtime="20190319 01:54:30.052"></status>
</kw>
<msg timestamp="20190319 01:54:30.052" level="INFO">${resul} = []</msg>
<status status="PASS" starttime="20190319 01:54:30.040" endtime="20190319 01:54:30.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20190319 01:54:30.052" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:54:30.052" endtime="20190319 01:54:30.052"></status>
</kw>
<doc>某节点想成为jury，直接可交付保证金，但是该节点交的钱不够，所以无法加入jury候选列表，但是可以查询改地址在合约账户的相关信息</doc>
<status status="PASS" starttime="20190319 01:54:21.966" endtime="20190319 01:54:30.053" critical="yes"></status>
</test>
<test id="s1-t4" name="Business_04">
<kw name="developerPayToDepositContract" library="developerPayToDepositContractParams">
<arguments>
<arg>${developerAddr_01}</arg>
<arg>80000000000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Developer交付保证金所需参数" library="developerPayToDepositContractParams">
<arguments>
<arg>${developerAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<assign>
<var>${Developer交付保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>DeveloperPayToDepositContract</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:30.064" level="INFO">${one} = ['DeveloperPayToDepositContract']</msg>
<status status="PASS" starttime="20190319 01:54:30.064" endtime="20190319 01:54:30.064"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${developerAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:30.065" level="INFO">${two} = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '80000000000', '1000000000', ['DeveloperPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:54:30.065" endtime="20190319 01:54:30.065"></status>
</kw>
<msg timestamp="20190319 01:54:30.065" level="INFO">${Developer交付保证金所需参数} = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '80000000000', '1000000000', ['DeveloperPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:54:30.064" endtime="20190319 01:54:30.065"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>DeveloperPayToDepositContract</arg>
<arg>${Developer交付保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:30.067" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:30.066" endtime="20190319 01:54:30.067"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:30.067" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '80000000000', '1000000000', ['DeveloperPayToDepositC...</msg>
<status status="PASS" starttime="20190319 01:54:30.067" endtime="20190319 01:54:30.068"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:30.068" level="INFO">Creating Session using : alias=DeveloperPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:30.068" endtime="20190319 01:54:30.069"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:30.070" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:30.073" level="INFO">Post Request using : alias=DeveloperPayToDepositContract, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "80000000000", "1000000000", ["DeveloperPayToDepositContract"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:30.073" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:30.069" endtime="20190319 01:54:30.073"></status>
</kw>
<msg timestamp="20190319 01:54:30.073" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:30.066" endtime="20190319 01:54:30.074"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:30.074" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"d794a26251b16af9d962906f0feae955e46b2cf9d550a8bece7c7770520766be"}
</msg>
<status status="PASS" starttime="20190319 01:54:30.074" endtime="20190319 01:54:30.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:54:38.076" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:54:30.074" endtime="20190319 01:54:38.077"></status>
</kw>
<msg timestamp="20190319 01:54:38.078" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"d794a26251b16af9d962906f0feae955e46b2cf9d550a8bece7c7770520766be"}
</msg>
<status status="PASS" starttime="20190319 01:54:30.063" endtime="20190319 01:54:38.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:38.081" level="INFO">{"jsonrpc":"2.0","id":"1","result":"d794a26251b16af9d962906f0feae955e46b2cf9d550a8bece7c7770520766be"}
</msg>
<status status="PASS" starttime="20190319 01:54:38.080" endtime="20190319 01:54:38.081"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${developerAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:38.089" level="INFO">${one} = ['GetBalanceWithAddr', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']</msg>
<status status="PASS" starttime="20190319 01:54:38.088" endtime="20190319 01:54:38.090"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:38.092" level="INFO">${two} = [['GetBalanceWithAddr', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']]</msg>
<status status="PASS" starttime="20190319 01:54:38.091" endtime="20190319 01:54:38.092"></status>
</kw>
<msg timestamp="20190319 01:54:38.093" level="INFO">${11} = [['GetBalanceWithAddr', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']]</msg>
<status status="PASS" starttime="20190319 01:54:38.086" endtime="20190319 01:54:38.093"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:38.098" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:38.097" endtime="20190319 01:54:38.099"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:38.102" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:38.100" endtime="20190319 01:54:38.102"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:38.104" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:38.103" endtime="20190319 01:54:38.105"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:38.107" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:38.110" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:38.110" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:38.106" endtime="20190319 01:54:38.110"></status>
</kw>
<msg timestamp="20190319 01:54:38.110" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:38.094" endtime="20190319 01:54:38.110"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:38.111" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":80000000000,\"last_modify_time\":862769,\"enter_time\":862769,\"pay_values\":[{\"pay_tokens\":{\"amount\":80000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":null,\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:54:38.111" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:38.111" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":80000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":80000000000,"asset":"PTN","address":""},"pay_ti...</msg>
<status status="PASS" starttime="20190319 01:54:38.110" endtime="20190319 01:54:38.111"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:54:38.111" level="INFO">${balance} = {"total_amount":80000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":80000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forf...</msg>
<status status="PASS" starttime="20190319 01:54:38.111" endtime="20190319 01:54:38.112"></status>
</kw>
<msg timestamp="20190319 01:54:38.112" level="INFO">${result} = {"total_amount":80000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":80000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forf...</msg>
<status status="PASS" starttime="20190319 01:54:38.083" endtime="20190319 01:54:38.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:38.112" level="INFO">{"total_amount":80000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":80000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:54:38.112" endtime="20190319 01:54:38.112"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:38.113" endtime="20190319 01:54:38.113"></status>
</kw>
<kw name="getListForDeveloperCandidate" library="getListForDeveloperCandidateParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForDeveloperCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:38.114" level="INFO">${one} = ['GetListForDeveloperCandidate']</msg>
<status status="PASS" starttime="20190319 01:54:38.114" endtime="20190319 01:54:38.114"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:38.115" level="INFO">${two} = [['GetListForDeveloperCandidate']]</msg>
<status status="PASS" starttime="20190319 01:54:38.114" endtime="20190319 01:54:38.115"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForDeveloperCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:38.116" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:38.116" endtime="20190319 01:54:38.116"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:38.117" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForDeveloperCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:38.117" endtime="20190319 01:54:38.117"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:38.118" level="INFO">Creating Session using : alias=GetListForDeveloperCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:38.118" endtime="20190319 01:54:38.118"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:38.120" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:38.122" level="INFO">Post Request using : alias=GetListForDeveloperCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForDeveloperCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:38.122" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:38.118" endtime="20190319 01:54:38.122"></status>
</kw>
<msg timestamp="20190319 01:54:38.123" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:38.115" endtime="20190319 01:54:38.123"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:38.123" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[\"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf\"]"}
 </msg>
<msg timestamp="20190319 01:54:38.123" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:38.123" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]'}</msg>
<status status="PASS" starttime="20190319 01:54:38.123" endtime="20190319 01:54:38.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:54:38.124" level="INFO">["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]</msg>
<status status="PASS" starttime="20190319 01:54:38.124" endtime="20190319 01:54:38.124"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:38.125" level="INFO">${result} = ["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]</msg>
<status status="PASS" starttime="20190319 01:54:38.124" endtime="20190319 01:54:38.125"></status>
</kw>
<msg timestamp="20190319 01:54:38.125" level="INFO">${result} = ["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]</msg>
<status status="PASS" starttime="20190319 01:54:38.113" endtime="20190319 01:54:38.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:38.125" level="INFO">["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]</msg>
<status status="PASS" starttime="20190319 01:54:38.125" endtime="20190319 01:54:38.126"></status>
</kw>
<doc>该节点想成为合约开发者，由于交付保证金足够，所以加入了开发者的候选列表，也可以查询到账户余额信息。</doc>
<status status="PASS" starttime="20190319 01:54:30.053" endtime="20190319 01:54:38.126" critical="yes"></status>
</test>
<test id="s1-t5" name="Business_06">
<kw name="juryPayToDepositContract" library="juryPayToDepositContractParams">
<arguments>
<arg>${juryAddr_01}</arg>
<arg>40000000000</arg>
</arguments>
<assign>
<var>${resul}</var>
</assign>
<kw name="Jury交付保证金所需参数" library="juryPayToDepositContractParams">
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<assign>
<var>${Jury交付保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>JuryPayToDepositContract</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:38.162" level="INFO">${one} = ['JuryPayToDepositContract']</msg>
<status status="PASS" starttime="20190319 01:54:38.161" endtime="20190319 01:54:38.162"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:38.164" level="INFO">${two} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '40000000000', '1000000000', ['JuryPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:54:38.163" endtime="20190319 01:54:38.164"></status>
</kw>
<msg timestamp="20190319 01:54:38.165" level="INFO">${Jury交付保证金所需参数} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '40000000000', '1000000000', ['JuryPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:54:38.160" endtime="20190319 01:54:38.165"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>JuryPayToDepositContract</arg>
<arg>${Jury交付保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:38.167" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:38.167" endtime="20190319 01:54:38.167"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:38.169" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '40000000000', '1000000000', ['JuryPayToDepositContra...</msg>
<status status="PASS" starttime="20190319 01:54:38.168" endtime="20190319 01:54:38.169"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:38.170" level="INFO">Creating Session using : alias=JuryPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:38.169" endtime="20190319 01:54:38.170"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:38.173" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:38.176" level="INFO">Post Request using : alias=JuryPayToDepositContract, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "40000000000", "1000000000", ["JuryPayToDepositContract"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:38.176" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:38.170" endtime="20190319 01:54:38.176"></status>
</kw>
<msg timestamp="20190319 01:54:38.176" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:38.165" endtime="20190319 01:54:38.176"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:38.177" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"141612ede8d1fe9dc33469d885ba12772e9b0449dfe89a40922766e427c93937"}
</msg>
<status status="PASS" starttime="20190319 01:54:38.177" endtime="20190319 01:54:38.177"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:54:46.179" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:54:38.178" endtime="20190319 01:54:46.180"></status>
</kw>
<msg timestamp="20190319 01:54:46.181" level="INFO">${resul} = {"jsonrpc":"2.0","id":"1","result":"141612ede8d1fe9dc33469d885ba12772e9b0449dfe89a40922766e427c93937"}
</msg>
<status status="PASS" starttime="20190319 01:54:38.159" endtime="20190319 01:54:46.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20190319 01:54:46.184" level="INFO">{"jsonrpc":"2.0","id":"1","result":"141612ede8d1fe9dc33469d885ba12772e9b0449dfe89a40922766e427c93937"}
</msg>
<status status="PASS" starttime="20190319 01:54:46.182" endtime="20190319 01:54:46.184"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${juryAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:46.195" level="INFO">${one} = ['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:54:46.194" endtime="20190319 01:54:46.195"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:46.197" level="INFO">${two} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:54:46.196" endtime="20190319 01:54:46.197"></status>
</kw>
<msg timestamp="20190319 01:54:46.198" level="INFO">${11} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:54:46.191" endtime="20190319 01:54:46.199"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:46.203" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:46.202" endtime="20190319 01:54:46.204"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:46.206" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:46.205" endtime="20190319 01:54:46.206"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:46.207" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:46.207" endtime="20190319 01:54:46.208"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:46.211" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:46.214" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:46.214" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:46.208" endtime="20190319 01:54:46.214"></status>
</kw>
<msg timestamp="20190319 01:54:46.215" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:46.200" endtime="20190319 01:54:46.215"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:46.216" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":80000000000,\"last_modify_time\":862769,\"enter_time\":0,\"pay_values\":[{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769},{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":null,\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:54:46.216" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:46.216" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":80000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":8...</msg>
<status status="PASS" starttime="20190319 01:54:46.215" endtime="20190319 01:54:46.216"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:54:46.217" level="INFO">${balance} = {"total_amount":80000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000000000...</msg>
<status status="PASS" starttime="20190319 01:54:46.216" endtime="20190319 01:54:46.217"></status>
</kw>
<msg timestamp="20190319 01:54:46.217" level="INFO">${result} = {"total_amount":80000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000000000...</msg>
<status status="PASS" starttime="20190319 01:54:46.186" endtime="20190319 01:54:46.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:46.218" level="INFO">{"total_amount":80000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:54:46.217" endtime="20190319 01:54:46.218"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:46.218" endtime="20190319 01:54:46.219"></status>
</kw>
<kw name="getListForJuryCandidate" library="getListForJuryCandidateParams">
<assign>
<var>${resul}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:46.220" level="INFO">${one} = ['GetListForJuryCandidate']</msg>
<status status="PASS" starttime="20190319 01:54:46.220" endtime="20190319 01:54:46.220"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:46.221" level="INFO">${two} = [['GetListForJuryCandidate']]</msg>
<status status="PASS" starttime="20190319 01:54:46.221" endtime="20190319 01:54:46.221"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:46.222" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:46.222" endtime="20190319 01:54:46.222"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:46.223" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForJuryCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:46.222" endtime="20190319 01:54:46.223"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:46.224" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:46.223" endtime="20190319 01:54:46.224"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:46.226" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:46.229" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForJuryCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:46.229" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:46.224" endtime="20190319 01:54:46.229"></status>
</kw>
<msg timestamp="20190319 01:54:46.229" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:46.221" endtime="20190319 01:54:46.229"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:46.230" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:54:46.230" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:46.230" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:54:46.229" endtime="20190319 01:54:46.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:54:46.230" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:54:46.230" endtime="20190319 01:54:46.231"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:46.231" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:54:46.231" endtime="20190319 01:54:46.231"></status>
</kw>
<msg timestamp="20190319 01:54:46.231" level="INFO">${resul} = []</msg>
<status status="PASS" starttime="20190319 01:54:46.219" endtime="20190319 01:54:46.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20190319 01:54:46.232" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:54:46.232" endtime="20190319 01:54:46.232"></status>
</kw>
<kw name="juryApplyCashback" library="juryApplyCashbackParams">
<arguments>
<arg>${juryAddr_01}</arg>
<arg>50000000000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="jury申请退还保证金所需参数" library="juryApplyCashbackParams">
<arguments>
<arg>${juryAddr}</arg>
<arg>${cashAmounts}</arg>
</arguments>
<assign>
<var>${jury申请退还保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>JuryApplyCashback</arg>
<arg>${cashAmounts}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:46.234" level="INFO">${one} = ['JuryApplyCashback', '50000000000']</msg>
<status status="PASS" starttime="20190319 01:54:46.234" endtime="20190319 01:54:46.234"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${juryAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:46.235" level="INFO">${two} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1000000000', '1000000000', ['JuryApplyCashback', '50000000000']]</msg>
<status status="PASS" starttime="20190319 01:54:46.234" endtime="20190319 01:54:46.235"></status>
</kw>
<msg timestamp="20190319 01:54:46.235" level="INFO">${jury申请退还保证金所需参数} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1000000000', '1000000000', ['JuryApplyCashback', '50000000000']]</msg>
<status status="PASS" starttime="20190319 01:54:46.233" endtime="20190319 01:54:46.235"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>JuryApplyCashback</arg>
<arg>${jury申请退还保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:46.236" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:46.236" endtime="20190319 01:54:46.236"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:46.237" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1000000000', '1000000000', ['JuryApplyCashback', '50...</msg>
<status status="PASS" starttime="20190319 01:54:46.237" endtime="20190319 01:54:46.237"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:46.238" level="INFO">Creating Session using : alias=JuryApplyCashback, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:46.238" endtime="20190319 01:54:46.238"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:46.240" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:46.242" level="INFO">Post Request using : alias=JuryApplyCashback, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "1000000000", "1000000000", ["JuryApplyCashback", "50000000000"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:46.242" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:46.238" endtime="20190319 01:54:46.242"></status>
</kw>
<msg timestamp="20190319 01:54:46.243" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:46.235" endtime="20190319 01:54:46.243"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:46.243" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"5e6951678db4b464e5dec3425ea6858205de3e7dd94a17dc93ed8caed80b7b17"}
</msg>
<status status="PASS" starttime="20190319 01:54:46.243" endtime="20190319 01:54:46.243"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:54:54.245" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:54:46.244" endtime="20190319 01:54:54.245"></status>
</kw>
<msg timestamp="20190319 01:54:54.247" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"5e6951678db4b464e5dec3425ea6858205de3e7dd94a17dc93ed8caed80b7b17"}
</msg>
<status status="PASS" starttime="20190319 01:54:46.233" endtime="20190319 01:54:54.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:54.250" level="INFO">{"jsonrpc":"2.0","id":"1","result":"5e6951678db4b464e5dec3425ea6858205de3e7dd94a17dc93ed8caed80b7b17"}
</msg>
<status status="PASS" starttime="20190319 01:54:54.249" endtime="20190319 01:54:54.250"></status>
</kw>
<kw name="getListForCashbackApplication" library="getListForCashbackApplicationParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:54.255" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:54:54.254" endtime="20190319 01:54:54.256"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:54.258" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:54:54.257" endtime="20190319 01:54:54.258"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:54.263" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:54.262" endtime="20190319 01:54:54.263"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:54.266" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:54.264" endtime="20190319 01:54:54.266"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:54.269" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:54.268" endtime="20190319 01:54:54.271"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:54.277" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:54.281" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:54.281" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:54.272" endtime="20190319 01:54:54.281"></status>
</kw>
<msg timestamp="20190319 01:54:54.282" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:54.259" endtime="20190319 01:54:54.282"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:54.283" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"cashback_address\":\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Jury\",\"cashback_time\":1552985688}]"}
 </msg>
<msg timestamp="20190319 01:54:54.283" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:54.283" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":15...</msg>
<status status="PASS" starttime="20190319 01:54:54.282" endtime="20190319 01:54:54.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:54:54.284" level="INFO">[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":1552985688}]</msg>
<status status="PASS" starttime="20190319 01:54:54.283" endtime="20190319 01:54:54.284"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:54:54.285" level="INFO">${addresses} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:54:54.284" endtime="20190319 01:54:54.285"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:54.286" level="INFO">${result} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:54:54.285" endtime="20190319 01:54:54.286"></status>
</kw>
<msg timestamp="20190319 01:54:54.286" level="INFO">${result} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:54:54.252" endtime="20190319 01:54:54.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:54:54.287" level="INFO">['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:54:54.287" endtime="20190319 01:54:54.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${juryAddr_01}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:54:54.287" endtime="20190319 01:54:54.288"></status>
</kw>
<kw name="handleForCashbackApplication" library="handleForCashbackApplicationParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>HandleForJuryApplyCashback</arg>
<arg>ok</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="基金会处理申请保证金退还所需参数" library="handleForCashbackApplicationParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>${handleWho}</arg>
<arg>${isAgree}</arg>
</arguments>
<assign>
<var>${基金会处理申请保证金退还所需参数}</var>
</assign>
<kw name="获取提取保证金申请列表所需参数" library="getListForCashbackApplicationParams">
<assign>
<var>${获取提取保证金申请列表所需参数 }</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:54.290" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:54:54.290" endtime="20190319 01:54:54.290"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:54:54.292" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:54:54.291" endtime="20190319 01:54:54.292"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:54.293" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:54.292" endtime="20190319 01:54:54.293"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:54.294" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:54:54.293" endtime="20190319 01:54:54.294"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:54.294" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:54.294" endtime="20190319 01:54:54.294"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:54.296" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:54.299" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:54.299" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:54.295" endtime="20190319 01:54:54.299"></status>
</kw>
<msg timestamp="20190319 01:54:54.299" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:54.292" endtime="20190319 01:54:54.299"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:54:54.300" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"cashback_address\":\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Jury\",\"cashback_time\":1552985688}]"}
 </msg>
<msg timestamp="20190319 01:54:54.300" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:54:54.300" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":15...</msg>
<status status="PASS" starttime="20190319 01:54:54.299" endtime="20190319 01:54:54.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:54:54.300" level="INFO">[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":1552985688}]</msg>
<status status="PASS" starttime="20190319 01:54:54.300" endtime="20190319 01:54:54.301"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:54:54.301" level="INFO">${addresses} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:54:54.301" endtime="20190319 01:54:54.301"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[times['cashback_time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${times}</var>
</assign>
<msg timestamp="20190319 01:54:54.302" level="INFO">${times} = [1552985688]</msg>
<status status="PASS" starttime="20190319 01:54:54.302" endtime="20190319 01:54:54.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}[0]</arg>
</arguments>
<assign>
<var>${address0}</var>
</assign>
<msg timestamp="20190319 01:54:54.303" level="INFO">${address0} = P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8</msg>
<status status="PASS" starttime="20190319 01:54:54.302" endtime="20190319 01:54:54.303"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${times}[0])</arg>
</arguments>
<assign>
<var>${strTime}</var>
</assign>
<msg timestamp="20190319 01:54:54.303" level="INFO">${strTime} = 1552985688</msg>
<status status="PASS" starttime="20190319 01:54:54.303" endtime="20190319 01:54:54.303"></status>
</kw>
<msg timestamp="20190319 01:54:54.304" level="INFO">${获取提取保证金申请列表所需参数 } = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1552985688']</msg>
<status status="PASS" starttime="20190319 01:54:54.290" endtime="20190319 01:54:54.304"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${handleWho}</arg>
<arg>${获取提取保证金申请列表所需参数 }[0]</arg>
<arg>${获取提取保证金申请列表所需参数 }[1]</arg>
<arg>${isAgree}</arg>
</arguments>
<assign>
<var>${1}</var>
</assign>
<msg timestamp="20190319 01:54:54.304" level="INFO">${1} = ['HandleForJuryApplyCashback', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1552985688', 'ok']</msg>
<status status="PASS" starttime="20190319 01:54:54.304" endtime="20190319 01:54:54.304"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:54:54.305" level="INFO">${one} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForJuryApplyCashback', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1552985688', 'ok']]</msg>
<status status="PASS" starttime="20190319 01:54:54.305" endtime="20190319 01:54:54.305"></status>
</kw>
<msg timestamp="20190319 01:54:54.305" level="INFO">${基金会处理申请保证金退还所需参数} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForJuryApplyCashback', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1552985688', 'ok']]</msg>
<status status="PASS" starttime="20190319 01:54:54.289" endtime="20190319 01:54:54.305"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForApplyCashback</arg>
<arg>${基金会处理申请保证金退还所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:54:54.306" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:54:54.306" endtime="20190319 01:54:54.307"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:54:54.307" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForJuryApplyCashb...</msg>
<status status="PASS" starttime="20190319 01:54:54.307" endtime="20190319 01:54:54.307"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:54:54.308" level="INFO">Creating Session using : alias=HandleForApplyCashback, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:54:54.308" endtime="20190319 01:54:54.308"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:54:54.310" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:54:54.313" level="INFO">Post Request using : alias=HandleForApplyCashback, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "1000000000", "1000000000", ["HandleForJuryApplyCashback", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "1552985688", "ok"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:54:54.313" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:54.308" endtime="20190319 01:54:54.313"></status>
</kw>
<msg timestamp="20190319 01:54:54.313" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:54:54.306" endtime="20190319 01:54:54.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:54:54.314" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"b3bf8623188b9959c2cae17971623e1691c3cbf8f67e8452960358902e08d8ca"}
</msg>
<status status="PASS" starttime="20190319 01:54:54.314" endtime="20190319 01:54:54.314"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:55:02.315" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:54:54.314" endtime="20190319 01:55:02.316"></status>
</kw>
<msg timestamp="20190319 01:55:02.317" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"b3bf8623188b9959c2cae17971623e1691c3cbf8f67e8452960358902e08d8ca"}
</msg>
<status status="PASS" starttime="20190319 01:54:54.288" endtime="20190319 01:55:02.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:02.320" level="INFO">{"jsonrpc":"2.0","id":"1","result":"b3bf8623188b9959c2cae17971623e1691c3cbf8f67e8452960358902e08d8ca"}
</msg>
<status status="PASS" starttime="20190319 01:55:02.319" endtime="20190319 01:55:02.320"></status>
</kw>
<kw name="getListForCashbackApplication" library="getListForCashbackApplicationParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:02.325" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:55:02.324" endtime="20190319 01:55:02.325"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:02.328" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:55:02.326" endtime="20190319 01:55:02.328"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:02.333" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:02.331" endtime="20190319 01:55:02.333"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:02.336" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:02.334" endtime="20190319 01:55:02.336"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:02.338" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:02.337" endtime="20190319 01:55:02.340"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:02.346" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:02.348" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:02.348" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:02.341" endtime="20190319 01:55:02.348"></status>
</kw>
<msg timestamp="20190319 01:55:02.348" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:02.329" endtime="20190319 01:55:02.348"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:02.349" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:55:02.349" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:02.349" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:55:02.349" endtime="20190319 01:55:02.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:02.350" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:55:02.350" endtime="20190319 01:55:02.350"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:55:02.351" level="INFO">${addresses} = []</msg>
<status status="PASS" starttime="20190319 01:55:02.350" endtime="20190319 01:55:02.351"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:02.351" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:55:02.351" endtime="20190319 01:55:02.351"></status>
</kw>
<msg timestamp="20190319 01:55:02.352" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:55:02.322" endtime="20190319 01:55:02.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:02.352" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:55:02.352" endtime="20190319 01:55:02.352"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${juryAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:02.354" level="INFO">${one} = ['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:02.354" endtime="20190319 01:55:02.354"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:02.354" level="INFO">${two} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:55:02.354" endtime="20190319 01:55:02.354"></status>
</kw>
<msg timestamp="20190319 01:55:02.355" level="INFO">${11} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:55:02.353" endtime="20190319 01:55:02.355"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:02.356" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:02.355" endtime="20190319 01:55:02.356"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:02.357" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:02.356" endtime="20190319 01:55:02.357"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:02.357" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:02.357" endtime="20190319 01:55:02.357"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:02.359" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:02.362" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:02.362" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:02.358" endtime="20190319 01:55:02.362"></status>
</kw>
<msg timestamp="20190319 01:55:02.362" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:02.355" endtime="20190319 01:55:02.362"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:02.363" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":30000000000,\"last_modify_time\":862769,\"enter_time\":0,\"pay_values\":[{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769},{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":[{\"cashback_address\":\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Jury\",\"cashback_time\":1552985688}],\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:55:02.363" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:02.363" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":30000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":8...</msg>
<status status="PASS" starttime="20190319 01:55:02.363" endtime="20190319 01:55:02.363"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:55:02.364" level="INFO">${balance} = {"total_amount":30000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000000000...</msg>
<status status="PASS" starttime="20190319 01:55:02.363" endtime="20190319 01:55:02.364"></status>
</kw>
<msg timestamp="20190319 01:55:02.364" level="INFO">${result} = {"total_amount":30000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000000000...</msg>
<status status="PASS" starttime="20190319 01:55:02.352" endtime="20190319 01:55:02.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:02.365" level="INFO">{"total_amount":30000000000,"last_modify_time":862769,"enter_time":0,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":1552985688}],"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:55:02.364" endtime="20190319 01:55:02.365"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:02.365" endtime="20190319 01:55:02.366"></status>
</kw>
<doc>该节点是在 Business_03 的基础上，再进行交付一下保证金，但是加起来还是没有达到保证金数量，所以jury候选列表为空，然后该节点提出申请退还一些保证金，基金会同意，退出保证金列表为空，该节点的账户余额会减少。</doc>
<status status="PASS" starttime="20190319 01:54:38.126" endtime="20190319 01:55:02.366" critical="yes"></status>
</test>
<test id="s1-t6" name="Business_07">
<kw name="developerApplyCashback" library="developerApplyCashbackParams">
<arguments>
<arg>${developerAddr_01}</arg>
<arg>50000000000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="developer申请退还保证金所需参数" library="developerApplyCashbackParams">
<arguments>
<arg>${developerAddr}</arg>
<arg>${cashAmounts}</arg>
</arguments>
<assign>
<var>${developer申请退还保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>DeveloperApplyCashback</arg>
<arg>${cashAmounts}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:02.381" level="INFO">${one} = ['DeveloperApplyCashback', '50000000000']</msg>
<status status="PASS" starttime="20190319 01:55:02.381" endtime="20190319 01:55:02.381"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${developerAddr}</arg>
<arg>${developerAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:02.382" level="INFO">${two} = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', '1000000000', '1000000000', ['DeveloperApplyCashback', '50000000000']]</msg>
<status status="PASS" starttime="20190319 01:55:02.381" endtime="20190319 01:55:02.382"></status>
</kw>
<msg timestamp="20190319 01:55:02.382" level="INFO">${developer申请退还保证金所需参数} = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', '1000000000', '1000000000', ['DeveloperApplyCashback', '50000000000']]</msg>
<status status="PASS" starttime="20190319 01:55:02.380" endtime="20190319 01:55:02.382"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>DeveloperApplyCashback</arg>
<arg>${developer申请退还保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:02.384" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:02.383" endtime="20190319 01:55:02.384"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:02.384" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', '1000000000', '1000000000', ['DeveloperApplyCashback'...</msg>
<status status="PASS" starttime="20190319 01:55:02.384" endtime="20190319 01:55:02.385"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:02.385" level="INFO">Creating Session using : alias=DeveloperApplyCashback, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:02.385" endtime="20190319 01:55:02.385"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:02.387" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:02.390" level="INFO">Post Request using : alias=DeveloperApplyCashback, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf", "P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf", "1000000000", "1000000000", ["DeveloperApplyCashback", "50000000000"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:02.390" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:02.386" endtime="20190319 01:55:02.390"></status>
</kw>
<msg timestamp="20190319 01:55:02.390" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:02.383" endtime="20190319 01:55:02.390"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:02.391" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"05604e681d93704e12941a058cf54dda4c7176de35508c95b56c93749ccff357"}
</msg>
<status status="PASS" starttime="20190319 01:55:02.391" endtime="20190319 01:55:02.391"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:55:10.393" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:55:02.391" endtime="20190319 01:55:10.394"></status>
</kw>
<msg timestamp="20190319 01:55:10.395" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"05604e681d93704e12941a058cf54dda4c7176de35508c95b56c93749ccff357"}
</msg>
<status status="PASS" starttime="20190319 01:55:02.380" endtime="20190319 01:55:10.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:10.398" level="INFO">{"jsonrpc":"2.0","id":"1","result":"05604e681d93704e12941a058cf54dda4c7176de35508c95b56c93749ccff357"}
</msg>
<status status="PASS" starttime="20190319 01:55:10.397" endtime="20190319 01:55:10.399"></status>
</kw>
<kw name="getListForCashbackApplication" library="getListForCashbackApplicationParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:10.405" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:55:10.403" endtime="20190319 01:55:10.405"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:10.407" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:55:10.406" endtime="20190319 01:55:10.408"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:10.414" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:10.412" endtime="20190319 01:55:10.414"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:10.416" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:10.415" endtime="20190319 01:55:10.416"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:10.417" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:10.417" endtime="20190319 01:55:10.418"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:10.421" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:10.424" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:10.425" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:10.418" endtime="20190319 01:55:10.425"></status>
</kw>
<msg timestamp="20190319 01:55:10.425" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:10.409" endtime="20190319 01:55:10.425"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:10.426" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"cashback_address\":\"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Developer\",\"cashback_time\":1552985703}]"}
 </msg>
<msg timestamp="20190319 01:55:10.426" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:10.426" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"cashback_address":"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Developer","cashback_tim...</msg>
<status status="PASS" starttime="20190319 01:55:10.426" endtime="20190319 01:55:10.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:10.427" level="INFO">[{"cashback_address":"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Developer","cashback_time":1552985703}]</msg>
<status status="PASS" starttime="20190319 01:55:10.427" endtime="20190319 01:55:10.427"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:55:10.428" level="INFO">${addresses} = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']</msg>
<status status="PASS" starttime="20190319 01:55:10.428" endtime="20190319 01:55:10.428"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:10.429" level="INFO">${result} = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']</msg>
<status status="PASS" starttime="20190319 01:55:10.428" endtime="20190319 01:55:10.429"></status>
</kw>
<msg timestamp="20190319 01:55:10.429" level="INFO">${result} = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']</msg>
<status status="PASS" starttime="20190319 01:55:10.401" endtime="20190319 01:55:10.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:10.430" level="INFO">['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']</msg>
<status status="PASS" starttime="20190319 01:55:10.430" endtime="20190319 01:55:10.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${developerAddr_01}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:10.430" endtime="20190319 01:55:10.431"></status>
</kw>
<kw name="getListForDeveloperCandidate" library="getListForDeveloperCandidateParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForDeveloperCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:10.433" level="INFO">${one} = ['GetListForDeveloperCandidate']</msg>
<status status="PASS" starttime="20190319 01:55:10.432" endtime="20190319 01:55:10.433"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:10.433" level="INFO">${two} = [['GetListForDeveloperCandidate']]</msg>
<status status="PASS" starttime="20190319 01:55:10.433" endtime="20190319 01:55:10.433"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForDeveloperCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:10.435" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:10.434" endtime="20190319 01:55:10.435"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:10.435" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForDeveloperCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:10.435" endtime="20190319 01:55:10.436"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:10.436" level="INFO">Creating Session using : alias=GetListForDeveloperCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:10.436" endtime="20190319 01:55:10.436"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:10.438" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:10.441" level="INFO">Post Request using : alias=GetListForDeveloperCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForDeveloperCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:10.441" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:10.437" endtime="20190319 01:55:10.441"></status>
</kw>
<msg timestamp="20190319 01:55:10.441" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:10.434" endtime="20190319 01:55:10.441"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:10.442" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[\"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf\"]"}
 </msg>
<msg timestamp="20190319 01:55:10.442" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:10.442" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]'}</msg>
<status status="PASS" starttime="20190319 01:55:10.442" endtime="20190319 01:55:10.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:10.443" level="INFO">["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]</msg>
<status status="PASS" starttime="20190319 01:55:10.442" endtime="20190319 01:55:10.443"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:10.443" level="INFO">${result} = ["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]</msg>
<status status="PASS" starttime="20190319 01:55:10.443" endtime="20190319 01:55:10.444"></status>
</kw>
<msg timestamp="20190319 01:55:10.444" level="INFO">${result} = ["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]</msg>
<status status="PASS" starttime="20190319 01:55:10.432" endtime="20190319 01:55:10.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:10.444" level="INFO">["P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]</msg>
<status status="PASS" starttime="20190319 01:55:10.444" endtime="20190319 01:55:10.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${developerAddr_01}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:10.445" endtime="20190319 01:55:10.445"></status>
</kw>
<kw name="handleForCashbackApplication" library="handleForCashbackApplicationParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>HandleForDeveloperApplyCashback</arg>
<arg>ok</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="基金会处理申请保证金退还所需参数" library="handleForCashbackApplicationParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>${handleWho}</arg>
<arg>${isAgree}</arg>
</arguments>
<assign>
<var>${基金会处理申请保证金退还所需参数}</var>
</assign>
<kw name="获取提取保证金申请列表所需参数" library="getListForCashbackApplicationParams">
<assign>
<var>${获取提取保证金申请列表所需参数 }</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:10.447" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:55:10.447" endtime="20190319 01:55:10.447"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:10.448" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:55:10.448" endtime="20190319 01:55:10.448"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:10.449" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:10.449" endtime="20190319 01:55:10.450"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:10.450" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:10.450" endtime="20190319 01:55:10.450"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:10.451" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:10.451" endtime="20190319 01:55:10.451"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:10.453" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:10.455" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:10.456" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:10.451" endtime="20190319 01:55:10.456"></status>
</kw>
<msg timestamp="20190319 01:55:10.456" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:10.448" endtime="20190319 01:55:10.456"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:10.457" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"cashback_address\":\"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Developer\",\"cashback_time\":1552985703}]"}
 </msg>
<msg timestamp="20190319 01:55:10.457" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:10.457" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"cashback_address":"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Developer","cashback_tim...</msg>
<status status="PASS" starttime="20190319 01:55:10.456" endtime="20190319 01:55:10.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:10.457" level="INFO">[{"cashback_address":"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Developer","cashback_time":1552985703}]</msg>
<status status="PASS" starttime="20190319 01:55:10.457" endtime="20190319 01:55:10.458"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:55:10.458" level="INFO">${addresses} = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']</msg>
<status status="PASS" starttime="20190319 01:55:10.458" endtime="20190319 01:55:10.458"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[times['cashback_time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${times}</var>
</assign>
<msg timestamp="20190319 01:55:10.459" level="INFO">${times} = [1552985703]</msg>
<status status="PASS" starttime="20190319 01:55:10.459" endtime="20190319 01:55:10.459"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}[0]</arg>
</arguments>
<assign>
<var>${address0}</var>
</assign>
<msg timestamp="20190319 01:55:10.460" level="INFO">${address0} = P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf</msg>
<status status="PASS" starttime="20190319 01:55:10.459" endtime="20190319 01:55:10.460"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${times}[0])</arg>
</arguments>
<assign>
<var>${strTime}</var>
</assign>
<msg timestamp="20190319 01:55:10.460" level="INFO">${strTime} = 1552985703</msg>
<status status="PASS" starttime="20190319 01:55:10.460" endtime="20190319 01:55:10.460"></status>
</kw>
<msg timestamp="20190319 01:55:10.461" level="INFO">${获取提取保证金申请列表所需参数 } = ['P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', '1552985703']</msg>
<status status="PASS" starttime="20190319 01:55:10.447" endtime="20190319 01:55:10.461"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${handleWho}</arg>
<arg>${获取提取保证金申请列表所需参数 }[0]</arg>
<arg>${获取提取保证金申请列表所需参数 }[1]</arg>
<arg>${isAgree}</arg>
</arguments>
<assign>
<var>${1}</var>
</assign>
<msg timestamp="20190319 01:55:10.461" level="INFO">${1} = ['HandleForDeveloperApplyCashback', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', '1552985703', 'ok']</msg>
<status status="PASS" starttime="20190319 01:55:10.461" endtime="20190319 01:55:10.461"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:10.462" level="INFO">${one} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForDeveloperApplyCashback', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', '1552985703', 'ok'...</msg>
<status status="PASS" starttime="20190319 01:55:10.462" endtime="20190319 01:55:10.462"></status>
</kw>
<msg timestamp="20190319 01:55:10.462" level="INFO">${基金会处理申请保证金退还所需参数} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForDeveloperApplyCashback', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf', '1552985703', 'ok'...</msg>
<status status="PASS" starttime="20190319 01:55:10.446" endtime="20190319 01:55:10.462"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForApplyCashback</arg>
<arg>${基金会处理申请保证金退还所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:10.464" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:10.463" endtime="20190319 01:55:10.464"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:10.464" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForDeveloperApply...</msg>
<status status="PASS" starttime="20190319 01:55:10.464" endtime="20190319 01:55:10.464"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:10.465" level="INFO">Creating Session using : alias=HandleForApplyCashback, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:10.465" endtime="20190319 01:55:10.465"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:10.467" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:10.470" level="INFO">Post Request using : alias=HandleForApplyCashback, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "1000000000", "1000000000", ["HandleForDeveloperApplyCashback", "P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf", "1552985703", "ok"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:10.470" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:10.465" endtime="20190319 01:55:10.470"></status>
</kw>
<msg timestamp="20190319 01:55:10.470" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:10.463" endtime="20190319 01:55:10.470"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:10.471" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"52f2f1d63fcdc3cdbc38b8e11ddd3f393ecde9f31635b8d45939730cc1776ab0"}
</msg>
<status status="PASS" starttime="20190319 01:55:10.471" endtime="20190319 01:55:10.471"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:55:18.473" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:55:10.471" endtime="20190319 01:55:18.473"></status>
</kw>
<msg timestamp="20190319 01:55:18.474" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"52f2f1d63fcdc3cdbc38b8e11ddd3f393ecde9f31635b8d45939730cc1776ab0"}
</msg>
<status status="PASS" starttime="20190319 01:55:10.445" endtime="20190319 01:55:18.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:18.478" level="INFO">{"jsonrpc":"2.0","id":"1","result":"52f2f1d63fcdc3cdbc38b8e11ddd3f393ecde9f31635b8d45939730cc1776ab0"}
</msg>
<status status="PASS" starttime="20190319 01:55:18.477" endtime="20190319 01:55:18.478"></status>
</kw>
<kw name="getListForCashbackApplication" library="getListForCashbackApplicationParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:18.483" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:55:18.482" endtime="20190319 01:55:18.484"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:18.486" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:55:18.485" endtime="20190319 01:55:18.486"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:18.494" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:18.492" endtime="20190319 01:55:18.494"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:18.498" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:18.495" endtime="20190319 01:55:18.498"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:18.500" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:18.499" endtime="20190319 01:55:18.501"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:18.509" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:18.517" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:18.517" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:18.503" endtime="20190319 01:55:18.517"></status>
</kw>
<msg timestamp="20190319 01:55:18.518" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:18.488" endtime="20190319 01:55:18.518"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:18.519" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:55:18.519" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:18.519" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:55:18.518" endtime="20190319 01:55:18.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:18.520" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:55:18.520" endtime="20190319 01:55:18.520"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:55:18.521" level="INFO">${addresses} = []</msg>
<status status="PASS" starttime="20190319 01:55:18.521" endtime="20190319 01:55:18.522"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:18.522" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:55:18.522" endtime="20190319 01:55:18.522"></status>
</kw>
<msg timestamp="20190319 01:55:18.523" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:55:18.480" endtime="20190319 01:55:18.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:18.523" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:55:18.523" endtime="20190319 01:55:18.524"></status>
</kw>
<kw name="getListForDeveloperCandidate" library="getListForDeveloperCandidateParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForDeveloperCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:18.525" level="INFO">${one} = ['GetListForDeveloperCandidate']</msg>
<status status="PASS" starttime="20190319 01:55:18.525" endtime="20190319 01:55:18.525"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:18.526" level="INFO">${two} = [['GetListForDeveloperCandidate']]</msg>
<status status="PASS" starttime="20190319 01:55:18.526" endtime="20190319 01:55:18.526"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForDeveloperCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:18.528" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:18.527" endtime="20190319 01:55:18.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:18.529" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForDeveloperCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:18.528" endtime="20190319 01:55:18.529"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:18.529" level="INFO">Creating Session using : alias=GetListForDeveloperCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:18.529" endtime="20190319 01:55:18.530"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:18.532" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:18.534" level="INFO">Post Request using : alias=GetListForDeveloperCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForDeveloperCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:18.534" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:18.530" endtime="20190319 01:55:18.534"></status>
</kw>
<msg timestamp="20190319 01:55:18.535" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:18.526" endtime="20190319 01:55:18.535"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:18.535" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:55:18.535" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:18.535" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:55:18.535" endtime="20190319 01:55:18.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:18.536" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:55:18.536" endtime="20190319 01:55:18.536"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:18.537" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:55:18.536" endtime="20190319 01:55:18.537"></status>
</kw>
<msg timestamp="20190319 01:55:18.537" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:55:18.524" endtime="20190319 01:55:18.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:18.538" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:55:18.537" endtime="20190319 01:55:18.538"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${developerAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:18.540" level="INFO">${one} = ['GetBalanceWithAddr', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']</msg>
<status status="PASS" starttime="20190319 01:55:18.539" endtime="20190319 01:55:18.540"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:18.540" level="INFO">${two} = [['GetBalanceWithAddr', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']]</msg>
<status status="PASS" starttime="20190319 01:55:18.540" endtime="20190319 01:55:18.540"></status>
</kw>
<msg timestamp="20190319 01:55:18.541" level="INFO">${11} = [['GetBalanceWithAddr', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']]</msg>
<status status="PASS" starttime="20190319 01:55:18.539" endtime="20190319 01:55:18.541"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:18.542" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:18.541" endtime="20190319 01:55:18.542"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:18.543" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:18.542" endtime="20190319 01:55:18.543"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:18.543" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:18.543" endtime="20190319 01:55:18.543"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:18.545" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:18.548" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:18.548" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:18.544" endtime="20190319 01:55:18.548"></status>
</kw>
<msg timestamp="20190319 01:55:18.548" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:18.541" endtime="20190319 01:55:18.548"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:18.549" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":30000000000,\"last_modify_time\":862769,\"enter_time\":862769,\"pay_values\":[{\"pay_tokens\":{\"amount\":80000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":[{\"cashback_address\":\"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Developer\",\"cashback_time\":1552985703}],\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:55:18.549" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:18.549" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":30000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":80000000000,"asset":"PTN","address":""},"pay_ti...</msg>
<status status="PASS" starttime="20190319 01:55:18.549" endtime="20190319 01:55:18.549"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:55:18.550" level="INFO">${balance} = {"total_amount":30000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":80000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":[{"cashbac...</msg>
<status status="PASS" starttime="20190319 01:55:18.549" endtime="20190319 01:55:18.550"></status>
</kw>
<msg timestamp="20190319 01:55:18.550" level="INFO">${result} = {"total_amount":30000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":80000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":[{"cashbac...</msg>
<status status="PASS" starttime="20190319 01:55:18.538" endtime="20190319 01:55:18.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:18.551" level="INFO">{"total_amount":30000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":80000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":[{"cashback_address":"P13gwLiwAC8MNCAf61UdLMoSnho7quCv7Kf","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Developer","cashback_time":1552985703}],"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:55:18.550" endtime="20190319 01:55:18.551"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:18.551" endtime="20190319 01:55:18.551"></status>
</kw>
<doc>该节点在 Business_04 的基础上，申请退出相应保证金，由于退出保证金后，余额不足，会被移除开发者候选列表，账户余额改变，退出列表为空，候选列表为空。</doc>
<status status="PASS" starttime="20190319 01:55:02.366" endtime="20190319 01:55:18.552" critical="yes"></status>
</test>
<test id="s1-t7" name="Business_05">
<kw name="mediatorPayToDepositContract" library="mediatorPayToDepositContractParams">
<arguments>
<arg>${mediatorAddr_02}</arg>
<arg>100000000000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mediator交付保证金所需参数" library="mediatorPayToDepositContractParams">
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<assign>
<var>${Mediator交付保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MediatorPayToDepositContract</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:18.569" level="INFO">${one} = ['MediatorPayToDepositContract']</msg>
<status status="PASS" starttime="20190319 01:55:18.568" endtime="20190319 01:55:18.569"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:18.570" level="INFO">${two} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '100000000000', '1000000000', ['MediatorPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:55:18.569" endtime="20190319 01:55:18.570"></status>
</kw>
<msg timestamp="20190319 01:55:18.570" level="INFO">${Mediator交付保证金所需参数} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '100000000000', '1000000000', ['MediatorPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:55:18.567" endtime="20190319 01:55:18.570"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>MediatorPayToDepositContract</arg>
<arg>${Mediator交付保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:18.571" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:18.571" endtime="20190319 01:55:18.571"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:18.573" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '100000000000', '1000000000', ['MediatorPayToDepositC...</msg>
<status status="PASS" starttime="20190319 01:55:18.572" endtime="20190319 01:55:18.573"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:18.574" level="INFO">Creating Session using : alias=MediatorPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:18.573" endtime="20190319 01:55:18.574"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:18.577" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:18.581" level="INFO">Post Request using : alias=MediatorPayToDepositContract, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "100000000000", "1000000000", ["MediatorPayToDepositContract"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:18.581" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:18.575" endtime="20190319 01:55:18.584"></status>
</kw>
<msg timestamp="20190319 01:55:18.585" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:18.570" endtime="20190319 01:55:18.585"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:18.586" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"ce0ed931ea2cd4c749b392ed36218f5cbd16a244a74c3a136fecdbd6d5db8fcd"}
</msg>
<status status="PASS" starttime="20190319 01:55:18.586" endtime="20190319 01:55:18.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:55:26.588" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:55:18.587" endtime="20190319 01:55:26.589"></status>
</kw>
<msg timestamp="20190319 01:55:26.590" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"ce0ed931ea2cd4c749b392ed36218f5cbd16a244a74c3a136fecdbd6d5db8fcd"}
</msg>
<status status="PASS" starttime="20190319 01:55:18.566" endtime="20190319 01:55:26.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:26.594" level="INFO">{"jsonrpc":"2.0","id":"1","result":"ce0ed931ea2cd4c749b392ed36218f5cbd16a244a74c3a136fecdbd6d5db8fcd"}
</msg>
<status status="PASS" starttime="20190319 01:55:26.592" endtime="20190319 01:55:26.594"></status>
</kw>
<kw name="getListForMediatorCandidate" library="getListForMediatorCandidateParams">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:26.599" level="INFO">${one} = ['GetListForMediatorCandidate']</msg>
<status status="PASS" starttime="20190319 01:55:26.598" endtime="20190319 01:55:26.600"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:26.603" level="INFO">${two} = [['GetListForMediatorCandidate']]</msg>
<status status="PASS" starttime="20190319 01:55:26.601" endtime="20190319 01:55:26.603"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:26.610" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:26.608" endtime="20190319 01:55:26.610"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:26.614" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForMediatorCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:26.611" endtime="20190319 01:55:26.615"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:26.616" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:26.616" endtime="20190319 01:55:26.616"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:26.618" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:26.621" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForMediatorCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:26.621" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:26.616" endtime="20190319 01:55:26.621"></status>
</kw>
<msg timestamp="20190319 01:55:26.621" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:26.604" endtime="20190319 01:55:26.621"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:26.622" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:55:26.622" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:26.622" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:55:26.622" endtime="20190319 01:55:26.622"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:55:26.623" level="INFO">Length is 2</msg>
<msg timestamp="20190319 01:55:26.623" level="INFO">${resultLen} = 2</msg>
<status status="PASS" starttime="20190319 01:55:26.623" endtime="20190319 01:55:26.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:55:26.624" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:55:26.623" endtime="20190319 01:55:26.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:55:26.624" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:55:26.624" endtime="20190319 01:55:26.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:26.625" endtime="20190319 01:55:26.626"></status>
</kw>
<msg timestamp="20190319 01:55:26.626" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:55:26.625" endtime="20190319 01:55:26.626"></status>
</kw>
<status status="PASS" starttime="20190319 01:55:26.596" endtime="20190319 01:55:26.626"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${mediatorAddr_02}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:26.628" level="INFO">${one} = ['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:55:26.628" endtime="20190319 01:55:26.628"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:26.629" level="INFO">${two} = [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:55:26.629" endtime="20190319 01:55:26.629"></status>
</kw>
<msg timestamp="20190319 01:55:26.629" level="INFO">${11} = [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:55:26.627" endtime="20190319 01:55:26.629"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:26.631" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:26.631" endtime="20190319 01:55:26.631"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:26.632" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:26.631" endtime="20190319 01:55:26.632"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:26.632" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:26.632" endtime="20190319 01:55:26.633"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:26.634" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:26.637" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:26.637" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:26.633" endtime="20190319 01:55:26.637"></status>
</kw>
<msg timestamp="20190319 01:55:26.638" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:26.630" endtime="20190319 01:55:26.638"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:26.638" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"balance is nil"}
 </msg>
<msg timestamp="20190319 01:55:26.638" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:26.639" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': 'balance is nil'}</msg>
<status status="PASS" starttime="20190319 01:55:26.638" endtime="20190319 01:55:26.639"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:55:26.639" level="INFO">${balance} = balance is nil</msg>
<status status="PASS" starttime="20190319 01:55:26.639" endtime="20190319 01:55:26.639"></status>
</kw>
<msg timestamp="20190319 01:55:26.639" level="INFO">${result} = balance is nil</msg>
<status status="PASS" starttime="20190319 01:55:26.626" endtime="20190319 01:55:26.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:26.640" level="INFO">balance is nil</msg>
<status status="PASS" starttime="20190319 01:55:26.640" endtime="20190319 01:55:26.640"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:26.640" endtime="20190319 01:55:26.641"></status>
</kw>
<doc>在 Business_02 的基础上，被没收节点继续申请加入mediator候选列举，因此该地址只需交付足够保证金即可，但是，由于该节点交付不够，所以无法加入候选类别，并且规定账户也是为空的。</doc>
<status status="PASS" starttime="20190319 01:55:18.552" endtime="20190319 01:55:26.641" critical="yes"></status>
</test>
<test id="s1-t8" name="Business_08">
<kw name="mediatorPayToDepositContract" library="mediatorPayToDepositContractParams">
<arguments>
<arg>${mediatorAddr_02}</arg>
<arg>250000000000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mediator交付保证金所需参数" library="mediatorPayToDepositContractParams">
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<assign>
<var>${Mediator交付保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MediatorPayToDepositContract</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:26.653" level="INFO">${one} = ['MediatorPayToDepositContract']</msg>
<status status="PASS" starttime="20190319 01:55:26.652" endtime="20190319 01:55:26.653"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:26.654" level="INFO">${two} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '250000000000', '1000000000', ['MediatorPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:55:26.653" endtime="20190319 01:55:26.654"></status>
</kw>
<msg timestamp="20190319 01:55:26.655" level="INFO">${Mediator交付保证金所需参数} = ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '250000000000', '1000000000', ['MediatorPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:55:26.651" endtime="20190319 01:55:26.655"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>MediatorPayToDepositContract</arg>
<arg>${Mediator交付保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:26.657" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:26.656" endtime="20190319 01:55:26.657"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:26.658" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '250000000000', '1000000000', ['MediatorPayToDepositC...</msg>
<status status="PASS" starttime="20190319 01:55:26.657" endtime="20190319 01:55:26.658"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:26.659" level="INFO">Creating Session using : alias=MediatorPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:26.659" endtime="20190319 01:55:26.659"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:26.661" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:26.664" level="INFO">Post Request using : alias=MediatorPayToDepositContract, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "250000000000", "1000000000", ["MediatorPayToDepositContract"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:26.664" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:26.660" endtime="20190319 01:55:26.664"></status>
</kw>
<msg timestamp="20190319 01:55:26.664" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:26.655" endtime="20190319 01:55:26.664"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:26.665" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"6ee1c1fb83a705be4f0ed06cd7a071d04a9c3e6da5734a56d0b71399f3028547"}
</msg>
<status status="PASS" starttime="20190319 01:55:26.665" endtime="20190319 01:55:26.665"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:55:34.666" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:55:26.665" endtime="20190319 01:55:34.666"></status>
</kw>
<msg timestamp="20190319 01:55:34.668" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"6ee1c1fb83a705be4f0ed06cd7a071d04a9c3e6da5734a56d0b71399f3028547"}
</msg>
<status status="PASS" starttime="20190319 01:55:26.651" endtime="20190319 01:55:34.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:34.670" level="INFO">{"jsonrpc":"2.0","id":"1","result":"6ee1c1fb83a705be4f0ed06cd7a071d04a9c3e6da5734a56d0b71399f3028547"}
</msg>
<status status="PASS" starttime="20190319 01:55:34.669" endtime="20190319 01:55:34.671"></status>
</kw>
<kw name="getListForMediatorCandidate" library="getListForMediatorCandidateParams">
<assign>
<var>@{addressList3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:34.680" level="INFO">${one} = ['GetListForMediatorCandidate']</msg>
<status status="PASS" starttime="20190319 01:55:34.678" endtime="20190319 01:55:34.680"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:34.682" level="INFO">${two} = [['GetListForMediatorCandidate']]</msg>
<status status="PASS" starttime="20190319 01:55:34.681" endtime="20190319 01:55:34.683"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:34.688" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:34.686" endtime="20190319 01:55:34.688"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:34.690" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForMediatorCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:34.688" endtime="20190319 01:55:34.690"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:34.691" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:34.690" endtime="20190319 01:55:34.692"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:34.696" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:34.701" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForMediatorCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:34.702" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:34.692" endtime="20190319 01:55:34.702"></status>
</kw>
<msg timestamp="20190319 01:55:34.702" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:34.684" endtime="20190319 01:55:34.703"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:34.704" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"address\":\"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn\",\"content\":\"{\\\"key\\\":\\\"value\\\"}\",\"time\":862769}]"}
 </msg>
<msg timestamp="20190319 01:55:34.704" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:34.705" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"address":"P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn","content":"{\\"key\\":\\"value\\"}","time":862769}]'}</msg>
<status status="PASS" starttime="20190319 01:55:34.703" endtime="20190319 01:55:34.705"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${resultLen}</var>
</assign>
<msg timestamp="20190319 01:55:34.706" level="INFO">Length is 97</msg>
<msg timestamp="20190319 01:55:34.706" level="INFO">${resultLen} = 97</msg>
<status status="PASS" starttime="20190319 01:55:34.705" endtime="20190319 01:55:34.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>list is nil</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190319 01:55:34.708" level="INFO">${address} = None</msg>
<status status="PASS" starttime="20190319 01:55:34.707" endtime="20190319 01:55:34.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} == 0</arg>
<arg>Create List</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<msg timestamp="20190319 01:55:34.710" level="INFO">@{addressList} = [ ]</msg>
<status status="PASS" starttime="20190319 01:55:34.709" endtime="20190319 01:55:34.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${resultLen} != 0</arg>
<arg>Evaluate</arg>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>@{addressList}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addressList['address'] for addressList in ${respContentJson['result']}]</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:34.712" endtime="20190319 01:55:34.713"></status>
</kw>
<msg timestamp="20190319 01:55:34.713" level="INFO">@{addressList} = [ P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn ]</msg>
<status status="PASS" starttime="20190319 01:55:34.710" endtime="20190319 01:55:34.713"></status>
</kw>
<msg timestamp="20190319 01:55:34.714" level="INFO">@{addressList3} = [ P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn ]</msg>
<status status="PASS" starttime="20190319 01:55:34.672" endtime="20190319 01:55:34.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{addressList3}</arg>
</arguments>
<msg timestamp="20190319 01:55:34.715" level="INFO">P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn</msg>
<status status="PASS" starttime="20190319 01:55:34.715" endtime="20190319 01:55:34.715"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${mediatorAddr_02}' in @{addressList3}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:34.716" endtime="20190319 01:55:34.717"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${mediatorAddr_02}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:34.720" level="INFO">${one} = ['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']</msg>
<status status="PASS" starttime="20190319 01:55:34.720" endtime="20190319 01:55:34.721"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:34.721" level="INFO">${two} = [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:55:34.721" endtime="20190319 01:55:34.721"></status>
</kw>
<msg timestamp="20190319 01:55:34.721" level="INFO">${11} = [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']]</msg>
<status status="PASS" starttime="20190319 01:55:34.719" endtime="20190319 01:55:34.721"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:34.723" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:34.722" endtime="20190319 01:55:34.723"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:34.723" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:34.723" endtime="20190319 01:55:34.723"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:34.724" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:34.724" endtime="20190319 01:55:34.724"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:34.726" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:34.728" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1CBgRmxR9oHisyvAvnBKZE4mCRDqCuMMKn"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:34.728" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:34.724" endtime="20190319 01:55:34.729"></status>
</kw>
<msg timestamp="20190319 01:55:34.729" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:34.722" endtime="20190319 01:55:34.729"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:34.729" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":250000000000,\"last_modify_time\":862769,\"enter_time\":862769,\"pay_values\":[{\"pay_tokens\":{\"amount\":250000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":null,\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:55:34.730" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:34.730" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":250000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":250000000000,"asset":"PTN","address":""},"pay_...</msg>
<status status="PASS" starttime="20190319 01:55:34.729" endtime="20190319 01:55:34.730"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:55:34.730" level="INFO">${balance} = {"total_amount":250000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":250000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"fo...</msg>
<status status="PASS" starttime="20190319 01:55:34.730" endtime="20190319 01:55:34.730"></status>
</kw>
<msg timestamp="20190319 01:55:34.731" level="INFO">${result} = {"total_amount":250000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":250000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"fo...</msg>
<status status="PASS" starttime="20190319 01:55:34.717" endtime="20190319 01:55:34.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:34.731" level="INFO">{"total_amount":250000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":250000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":null,"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:55:34.731" endtime="20190319 01:55:34.731"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:34.732" endtime="20190319 01:55:34.732"></status>
</kw>
<doc>在 Business_02 的基础上，被没收节点继续申请加入mediator候选列举，因此该地址只需交付足够保证金即可</doc>
<status status="PASS" starttime="20190319 01:55:26.642" endtime="20190319 01:55:34.732" critical="yes"></status>
</test>
<test id="s1-t9" name="Business_09">
<kw name="juryPayToDepositContract" library="juryPayToDepositContractParams">
<arguments>
<arg>${juryAddr_01}</arg>
<arg>140000000000</arg>
</arguments>
<assign>
<var>${resul}</var>
</assign>
<kw name="Jury交付保证金所需参数" library="juryPayToDepositContractParams">
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<assign>
<var>${Jury交付保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>JuryPayToDepositContract</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:34.748" level="INFO">${one} = ['JuryPayToDepositContract']</msg>
<status status="PASS" starttime="20190319 01:55:34.748" endtime="20190319 01:55:34.748"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:34.749" level="INFO">${two} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '140000000000', '1000000000', ['JuryPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:55:34.749" endtime="20190319 01:55:34.749"></status>
</kw>
<msg timestamp="20190319 01:55:34.749" level="INFO">${Jury交付保证金所需参数} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '140000000000', '1000000000', ['JuryPayToDepositContract']]</msg>
<status status="PASS" starttime="20190319 01:55:34.747" endtime="20190319 01:55:34.749"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>JuryPayToDepositContract</arg>
<arg>${Jury交付保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:34.752" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:34.751" endtime="20190319 01:55:34.752"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:34.753" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', '140000000000', '1000000000', ['JuryPayToDepositContr...</msg>
<status status="PASS" starttime="20190319 01:55:34.753" endtime="20190319 01:55:34.753"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:34.754" level="INFO">Creating Session using : alias=JuryPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:34.754" endtime="20190319 01:55:34.754"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:34.756" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:34.759" level="INFO">Post Request using : alias=JuryPayToDepositContract, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "140000000000", "1000000000", ["JuryPayToDepositContract"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:34.759" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:34.755" endtime="20190319 01:55:34.759"></status>
</kw>
<msg timestamp="20190319 01:55:34.759" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:34.750" endtime="20190319 01:55:34.760"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:34.760" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"6b3349ebe611d1df11578ad465bd76d204305a66b729ca2baaa50e71b6f551df"}
</msg>
<status status="PASS" starttime="20190319 01:55:34.760" endtime="20190319 01:55:34.760"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:55:43.002" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:55:34.760" endtime="20190319 01:55:43.002"></status>
</kw>
<msg timestamp="20190319 01:55:43.003" level="INFO">${resul} = {"jsonrpc":"2.0","id":"1","result":"6b3349ebe611d1df11578ad465bd76d204305a66b729ca2baaa50e71b6f551df"}
</msg>
<status status="PASS" starttime="20190319 01:55:34.747" endtime="20190319 01:55:43.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20190319 01:55:43.006" level="INFO">{"jsonrpc":"2.0","id":"1","result":"6b3349ebe611d1df11578ad465bd76d204305a66b729ca2baaa50e71b6f551df"}
</msg>
<status status="PASS" starttime="20190319 01:55:43.005" endtime="20190319 01:55:43.006"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${juryAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:43.015" level="INFO">${one} = ['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:43.013" endtime="20190319 01:55:43.015"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:43.019" level="INFO">${two} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:55:43.017" endtime="20190319 01:55:43.019"></status>
</kw>
<msg timestamp="20190319 01:55:43.021" level="INFO">${11} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:55:43.010" endtime="20190319 01:55:43.021"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:43.025" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:43.025" endtime="20190319 01:55:43.025"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:43.026" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:43.026" endtime="20190319 01:55:43.026"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:43.027" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:43.026" endtime="20190319 01:55:43.027"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:43.029" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:43.032" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:43.032" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:43.027" endtime="20190319 01:55:43.032"></status>
</kw>
<msg timestamp="20190319 01:55:43.032" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:43.023" endtime="20190319 01:55:43.032"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:43.033" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":170000000000,\"last_modify_time\":862769,\"enter_time\":862769,\"pay_values\":[{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769},{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769},{\"pay_tokens\":{\"amount\":140000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":[{\"cashback_address\":\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Jury\",\"cashback_time\":1552985688}],\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:55:43.033" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:43.033" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_t...</msg>
<status status="PASS" starttime="20190319 01:55:43.033" endtime="20190319 01:55:43.034"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:55:43.034" level="INFO">${balance} = {"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000...</msg>
<status status="PASS" starttime="20190319 01:55:43.034" endtime="20190319 01:55:43.034"></status>
</kw>
<msg timestamp="20190319 01:55:43.035" level="INFO">${result} = {"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000...</msg>
<status status="PASS" starttime="20190319 01:55:43.008" endtime="20190319 01:55:43.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:43.035" level="INFO">{"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":140000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":1552985688}],"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:55:43.035" endtime="20190319 01:55:43.035"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:43.036" endtime="20190319 01:55:43.036"></status>
</kw>
<kw name="getListForJuryCandidate" library="getListForJuryCandidateParams">
<assign>
<var>${resul}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:43.037" level="INFO">${one} = ['GetListForJuryCandidate']</msg>
<status status="PASS" starttime="20190319 01:55:43.037" endtime="20190319 01:55:43.037"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:43.038" level="INFO">${two} = [['GetListForJuryCandidate']]</msg>
<status status="PASS" starttime="20190319 01:55:43.038" endtime="20190319 01:55:43.038"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:43.040" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:43.039" endtime="20190319 01:55:43.040"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:43.040" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForJuryCandidate']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:43.040" endtime="20190319 01:55:43.041"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:43.041" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:43.041" endtime="20190319 01:55:43.042"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:43.043" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:43.046" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForJuryCandidate"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:43.046" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:43.042" endtime="20190319 01:55:43.046"></status>
</kw>
<msg timestamp="20190319 01:55:43.046" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:43.038" endtime="20190319 01:55:43.046"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:43.047" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\"]"}
 </msg>
<msg timestamp="20190319 01:55:43.047" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:43.047" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]'}</msg>
<status status="PASS" starttime="20190319 01:55:43.047" endtime="20190319 01:55:43.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:43.048" level="INFO">["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]</msg>
<status status="PASS" starttime="20190319 01:55:43.048" endtime="20190319 01:55:43.048"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:43.049" level="INFO">${result} = ["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]</msg>
<status status="PASS" starttime="20190319 01:55:43.048" endtime="20190319 01:55:43.049"></status>
</kw>
<msg timestamp="20190319 01:55:43.049" level="INFO">${resul} = ["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]</msg>
<status status="PASS" starttime="20190319 01:55:43.037" endtime="20190319 01:55:43.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20190319 01:55:43.050" level="INFO">["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]</msg>
<status status="PASS" starttime="20190319 01:55:43.050" endtime="20190319 01:55:43.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${juryAddr_01}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:43.051" endtime="20190319 01:55:43.052"></status>
</kw>
<doc>在 Business_06 的基础上，该节点继续交付保证金想成为 jury 候选列表的节点，此次交付了足够的保证金，所以成功进入候选列表，并且余额相应的改变。</doc>
<status status="PASS" starttime="20190319 01:55:34.733" endtime="20190319 01:55:43.052" critical="yes"></status>
</test>
<test id="s1-t10" name="Business_10">
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${juryAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:43.055" level="INFO">${one} = ['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:43.054" endtime="20190319 01:55:43.055"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:43.055" level="INFO">${two} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:55:43.055" endtime="20190319 01:55:43.055"></status>
</kw>
<msg timestamp="20190319 01:55:43.056" level="INFO">${11} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:55:43.054" endtime="20190319 01:55:43.056"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:43.057" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:43.057" endtime="20190319 01:55:43.057"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:43.058" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:43.057" endtime="20190319 01:55:43.058"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:43.059" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:43.058" endtime="20190319 01:55:43.059"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:43.061" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:43.065" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:43.065" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:43.059" endtime="20190319 01:55:43.065"></status>
</kw>
<msg timestamp="20190319 01:55:43.066" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:43.056" endtime="20190319 01:55:43.066"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:43.068" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":170000000000,\"last_modify_time\":862769,\"enter_time\":862769,\"pay_values\":[{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769},{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769},{\"pay_tokens\":{\"amount\":140000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":[{\"cashback_address\":\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Jury\",\"cashback_time\":1552985688}],\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:55:43.068" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:43.068" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_t...</msg>
<status status="PASS" starttime="20190319 01:55:43.066" endtime="20190319 01:55:43.068"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:55:43.068" level="INFO">${balance} = {"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000...</msg>
<status status="PASS" starttime="20190319 01:55:43.068" endtime="20190319 01:55:43.069"></status>
</kw>
<msg timestamp="20190319 01:55:43.069" level="INFO">${result} = {"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000...</msg>
<status status="PASS" starttime="20190319 01:55:43.053" endtime="20190319 01:55:43.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:43.069" level="INFO">{"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":140000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":1552985688}],"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:55:43.069" endtime="20190319 01:55:43.069"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:43.070" endtime="20190319 01:55:43.070"></status>
</kw>
<kw name="juryApplyCashback" library="juryApplyCashbackParams">
<arguments>
<arg>${juryAddr_01}</arg>
<arg>50000000000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="jury申请退还保证金所需参数" library="juryApplyCashbackParams">
<arguments>
<arg>${juryAddr}</arg>
<arg>${cashAmounts}</arg>
</arguments>
<assign>
<var>${jury申请退还保证金所需参数}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>JuryApplyCashback</arg>
<arg>${cashAmounts}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:43.072" level="INFO">${one} = ['JuryApplyCashback', '50000000000']</msg>
<status status="PASS" starttime="20190319 01:55:43.072" endtime="20190319 01:55:43.072"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${juryAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:43.073" level="INFO">${two} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1000000000', '1000000000', ['JuryApplyCashback', '50000000000']]</msg>
<status status="PASS" starttime="20190319 01:55:43.072" endtime="20190319 01:55:43.073"></status>
</kw>
<msg timestamp="20190319 01:55:43.073" level="INFO">${jury申请退还保证金所需参数} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1000000000', '1000000000', ['JuryApplyCashback', '50000000000']]</msg>
<status status="PASS" starttime="20190319 01:55:43.071" endtime="20190319 01:55:43.073"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>JuryApplyCashback</arg>
<arg>${jury申请退还保证金所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:43.074" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:43.073" endtime="20190319 01:55:43.074"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:43.075" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1000000000', '1000000000', ['JuryApplyCashback', '50...</msg>
<status status="PASS" starttime="20190319 01:55:43.074" endtime="20190319 01:55:43.075"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:43.075" level="INFO">Creating Session using : alias=JuryApplyCashback, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:43.075" endtime="20190319 01:55:43.075"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:43.077" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:43.080" level="INFO">Post Request using : alias=JuryApplyCashback, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "1000000000", "1000000000", ["JuryApplyCashback", "50000000000"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:43.080" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:43.076" endtime="20190319 01:55:43.080"></status>
</kw>
<msg timestamp="20190319 01:55:43.080" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:43.073" endtime="20190319 01:55:43.080"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:43.081" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"fdaba2ee7f50a37ab98856b3ede8ee6992732537436f8b5052ed5a10335142c8"}
</msg>
<status status="PASS" starttime="20190319 01:55:43.081" endtime="20190319 01:55:43.081"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:55:51.083" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:55:43.082" endtime="20190319 01:55:51.083"></status>
</kw>
<msg timestamp="20190319 01:55:51.085" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"fdaba2ee7f50a37ab98856b3ede8ee6992732537436f8b5052ed5a10335142c8"}
</msg>
<status status="PASS" starttime="20190319 01:55:43.070" endtime="20190319 01:55:51.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:51.088" level="INFO">{"jsonrpc":"2.0","id":"1","result":"fdaba2ee7f50a37ab98856b3ede8ee6992732537436f8b5052ed5a10335142c8"}
</msg>
<status status="PASS" starttime="20190319 01:55:51.087" endtime="20190319 01:55:51.089"></status>
</kw>
<kw name="getListForCashbackApplication" library="getListForCashbackApplicationParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:51.095" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:55:51.093" endtime="20190319 01:55:51.095"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:51.100" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:55:51.097" endtime="20190319 01:55:51.100"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:51.107" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:51.105" endtime="20190319 01:55:51.107"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:51.111" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:51.108" endtime="20190319 01:55:51.111"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:51.114" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:51.113" endtime="20190319 01:55:51.115"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:51.123" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:51.127" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:51.127" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:51.117" endtime="20190319 01:55:51.127"></status>
</kw>
<msg timestamp="20190319 01:55:51.127" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:51.102" endtime="20190319 01:55:51.127"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:51.128" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"cashback_address\":\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Jury\",\"cashback_time\":1552985745}]"}
 </msg>
<msg timestamp="20190319 01:55:51.128" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:51.128" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":15...</msg>
<status status="PASS" starttime="20190319 01:55:51.128" endtime="20190319 01:55:51.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:51.129" level="INFO">[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":1552985745}]</msg>
<status status="PASS" starttime="20190319 01:55:51.128" endtime="20190319 01:55:51.129"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:55:51.129" level="INFO">${addresses} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:51.129" endtime="20190319 01:55:51.129"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:51.130" level="INFO">${result} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:51.130" endtime="20190319 01:55:51.130"></status>
</kw>
<msg timestamp="20190319 01:55:51.130" level="INFO">${result} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:51.091" endtime="20190319 01:55:51.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:51.131" level="INFO">['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:51.131" endtime="20190319 01:55:51.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${juryAddr_01}</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:51.132" endtime="20190319 01:55:51.132"></status>
</kw>
<kw name="handleForCashbackApplication" library="handleForCashbackApplicationParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>HandleForJuryApplyCashback</arg>
<arg>no</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="基金会处理申请保证金退还所需参数" library="handleForCashbackApplicationParams">
<arguments>
<arg>${foundationAddr}</arg>
<arg>${handleWho}</arg>
<arg>${isAgree}</arg>
</arguments>
<assign>
<var>${基金会处理申请保证金退还所需参数}</var>
</assign>
<kw name="获取提取保证金申请列表所需参数" library="getListForCashbackApplicationParams">
<assign>
<var>${获取提取保证金申请列表所需参数 }</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:51.135" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:55:51.135" endtime="20190319 01:55:51.135"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:51.136" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:55:51.135" endtime="20190319 01:55:51.136"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:51.137" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:51.137" endtime="20190319 01:55:51.137"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:51.138" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:51.138" endtime="20190319 01:55:51.138"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:51.139" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:51.138" endtime="20190319 01:55:51.139"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:51.141" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:51.143" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:51.144" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:51.139" endtime="20190319 01:55:51.144"></status>
</kw>
<msg timestamp="20190319 01:55:51.144" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:51.136" endtime="20190319 01:55:51.144"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:51.145" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[{\"cashback_address\":\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Jury\",\"cashback_time\":1552985745}]"}
 </msg>
<msg timestamp="20190319 01:55:51.145" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:51.145" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":15...</msg>
<status status="PASS" starttime="20190319 01:55:51.144" endtime="20190319 01:55:51.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:51.145" level="INFO">[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":1552985745}]</msg>
<status status="PASS" starttime="20190319 01:55:51.145" endtime="20190319 01:55:51.145"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:55:51.146" level="INFO">${addresses} = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:51.146" endtime="20190319 01:55:51.146"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[times['cashback_time'] for times in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${times}</var>
</assign>
<msg timestamp="20190319 01:55:51.147" level="INFO">${times} = [1552985745]</msg>
<status status="PASS" starttime="20190319 01:55:51.146" endtime="20190319 01:55:51.147"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}[0]</arg>
</arguments>
<assign>
<var>${address0}</var>
</assign>
<msg timestamp="20190319 01:55:51.148" level="INFO">${address0} = P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8</msg>
<status status="PASS" starttime="20190319 01:55:51.147" endtime="20190319 01:55:51.148"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${times}[0])</arg>
</arguments>
<assign>
<var>${strTime}</var>
</assign>
<msg timestamp="20190319 01:55:51.149" level="INFO">${strTime} = 1552985745</msg>
<status status="PASS" starttime="20190319 01:55:51.148" endtime="20190319 01:55:51.149"></status>
</kw>
<msg timestamp="20190319 01:55:51.149" level="INFO">${获取提取保证金申请列表所需参数 } = ['P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1552985745']</msg>
<status status="PASS" starttime="20190319 01:55:51.134" endtime="20190319 01:55:51.149"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${handleWho}</arg>
<arg>${获取提取保证金申请列表所需参数 }[0]</arg>
<arg>${获取提取保证金申请列表所需参数 }[1]</arg>
<arg>${isAgree}</arg>
</arguments>
<assign>
<var>${1}</var>
</assign>
<msg timestamp="20190319 01:55:51.150" level="INFO">${1} = ['HandleForJuryApplyCashback', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1552985745', 'no']</msg>
<status status="PASS" starttime="20190319 01:55:51.149" endtime="20190319 01:55:51.150"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:51.151" level="INFO">${one} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForJuryApplyCashback', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1552985745', 'no']]</msg>
<status status="PASS" starttime="20190319 01:55:51.150" endtime="20190319 01:55:51.151"></status>
</kw>
<msg timestamp="20190319 01:55:51.151" level="INFO">${基金会处理申请保证金退还所需参数} = ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForJuryApplyCashback', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8', '1552985745', 'no']]</msg>
<status status="PASS" starttime="20190319 01:55:51.133" endtime="20190319 01:55:51.151"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForApplyCashback</arg>
<arg>${基金会处理申请保证金退还所需参数}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:51.152" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:51.152" endtime="20190319 01:55:51.152"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:51.153" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractInvoke', 'params': ['P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', 'P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF', '1000000000', '1000000000', ['HandleForJuryApplyCashb...</msg>
<status status="PASS" starttime="20190319 01:55:51.152" endtime="20190319 01:55:51.153"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:51.153" level="INFO">Creating Session using : alias=HandleForApplyCashback, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:51.153" endtime="20190319 01:55:51.154"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:51.156" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:51.159" level="INFO">Post Request using : alias=HandleForApplyCashback, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractInvoke", "params": ["P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "P1414gaxPwsmSMNvLegSjF6P9e3vXomVLZF", "1000000000", "1000000000", ["HandleForJuryApplyCashback", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8", "1552985745", "no"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:51.159" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:51.154" endtime="20190319 01:55:51.159"></status>
</kw>
<msg timestamp="20190319 01:55:51.159" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:51.151" endtime="20190319 01:55:51.159"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:51.160" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"441addf09fb573ab6836da01ccc1caf94034afaeb3a930d68eb80004a2a38183"}
</msg>
<status status="PASS" starttime="20190319 01:55:51.160" endtime="20190319 01:55:51.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>8</arg>
</arguments>
<msg timestamp="20190319 01:55:59.162" level="INFO">Slept 8 seconds</msg>
<status status="PASS" starttime="20190319 01:55:51.160" endtime="20190319 01:55:59.162"></status>
</kw>
<msg timestamp="20190319 01:55:59.164" level="INFO">${result} = {"jsonrpc":"2.0","id":"1","result":"441addf09fb573ab6836da01ccc1caf94034afaeb3a930d68eb80004a2a38183"}
</msg>
<status status="PASS" starttime="20190319 01:55:51.133" endtime="20190319 01:55:59.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:59.168" level="INFO">{"jsonrpc":"2.0","id":"1","result":"441addf09fb573ab6836da01ccc1caf94034afaeb3a930d68eb80004a2a38183"}
</msg>
<status status="PASS" starttime="20190319 01:55:59.166" endtime="20190319 01:55:59.169"></status>
</kw>
<kw name="getListForCashbackApplication" library="getListForCashbackApplicationParams">
<assign>
<var>${result}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForCashbackApplication</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:59.174" level="INFO">${one} = ['GetListForCashbackApplication']</msg>
<status status="PASS" starttime="20190319 01:55:59.173" endtime="20190319 01:55:59.174"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:59.177" level="INFO">${two} = [['GetListForCashbackApplication']]</msg>
<status status="PASS" starttime="20190319 01:55:59.176" endtime="20190319 01:55:59.178"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForCashbackApplication</arg>
<arg>${two}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:59.187" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:59.184" endtime="20190319 01:55:59.187"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:59.191" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetListForCashbackApplication']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:59.188" endtime="20190319 01:55:59.191"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:59.194" level="INFO">Creating Session using : alias=GetListForCashbackApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:59.192" endtime="20190319 01:55:59.195"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:59.197" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:59.200" level="INFO">Post Request using : alias=GetListForCashbackApplication, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetListForCashbackApplication"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:59.200" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:59.195" endtime="20190319 01:55:59.200"></status>
</kw>
<msg timestamp="20190319 01:55:59.201" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:59.179" endtime="20190319 01:55:59.201"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:59.201" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"[]"}
 </msg>
<msg timestamp="20190319 01:55:59.201" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:59.201" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '[]'}</msg>
<status status="PASS" starttime="20190319 01:55:59.201" endtime="20190319 01:55:59.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<msg timestamp="20190319 01:55:59.202" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:55:59.202" endtime="20190319 01:55:59.202"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[addresses['cashback_address'] for addresses in ${respContentJson['result']}]</arg>
</arguments>
<assign>
<var>${addresses}</var>
</assign>
<msg timestamp="20190319 01:55:59.203" level="INFO">${addresses} = []</msg>
<status status="PASS" starttime="20190319 01:55:59.202" endtime="20190319 01:55:59.203"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${addresses}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190319 01:55:59.204" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:55:59.203" endtime="20190319 01:55:59.204"></status>
</kw>
<msg timestamp="20190319 01:55:59.204" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20190319 01:55:59.170" endtime="20190319 01:55:59.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:59.205" level="INFO">[]</msg>
<status status="PASS" starttime="20190319 01:55:59.204" endtime="20190319 01:55:59.205"></status>
</kw>
<kw name="getCandidateBalanceWithAddr" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${juryAddr_01}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="获取某个节点的账户" library="getCandidateBalanceWithAddrParams">
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${11}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBalanceWithAddr</arg>
<arg>${nodeAddr}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190319 01:55:59.206" level="INFO">${one} = ['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']</msg>
<status status="PASS" starttime="20190319 01:55:59.206" endtime="20190319 01:55:59.206"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190319 01:55:59.207" level="INFO">${two} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:55:59.207" endtime="20190319 01:55:59.207"></status>
</kw>
<msg timestamp="20190319 01:55:59.207" level="INFO">${11} = [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']]</msg>
<status status="PASS" starttime="20190319 01:55:59.206" endtime="20190319 01:55:59.207"></status>
</kw>
<kw name="创建公用的POST请求" library="postRequest">
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetCandidateBalanceWithAddr</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190319 01:55:59.209" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190319 01:55:59.208" endtime="20190319 01:55:59.209"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=@{params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190319 01:55:59.210" level="INFO">${data} = {'jsonrpc': '2.0', 'method': 'ptn_depositContractQuery', 'params': [['GetBalanceWithAddr', 'P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8']], 'id': '1'}</msg>
<status status="PASS" starttime="20190319 01:55:59.210" endtime="20190319 01:55:59.210"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
</arguments>
<msg timestamp="20190319 01:55:59.211" level="INFO">Creating Session using : alias=GetCandidateBalanceWithAddr, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190319 01:55:59.211" endtime="20190319 01:55:59.211"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8545</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190319 01:55:59.213" level="INFO">Starting new HTTP connection (1): 127.0.0.1</msg>
<msg timestamp="20190319 01:55:59.217" level="INFO">Post Request using : alias=GetCandidateBalanceWithAddr, uri=http://127.0.0.1:8545, data={"jsonrpc": "2.0", "method": "ptn_depositContractQuery", "params": [["GetBalanceWithAddr", "P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8"]], "id": "1"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190319 01:55:59.217" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:59.212" endtime="20190319 01:55:59.217"></status>
</kw>
<msg timestamp="20190319 01:55:59.217" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190319 01:55:59.208" endtime="20190319 01:55:59.217"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respContentJson}</var>
</assign>
<msg timestamp="20190319 01:55:59.218" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"total_amount\":170000000000,\"last_modify_time\":862769,\"enter_time\":862769,\"pay_values\":[{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769},{\"pay_tokens\":{\"amount\":40000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769},{\"pay_tokens\":{\"amount\":140000000000,\"asset\":\"PTN\",\"address\":\"\"},\"pay_time\":862769}],\"cashback_values\":[{\"cashback_address\":\"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8\",\"cashback_tokens\":{\"amount\":50000000000,\"asset\":\"PTN\",\"address\":\"\"},\"role\":\"Jury\",\"cashback_time\":1552985688}],\"forfeiture_values\":null}"}
 </msg>
<msg timestamp="20190319 01:55:59.218" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190319 01:55:59.218" level="INFO">${respContentJson} = {'jsonrpc': '2.0', 'id': '1', 'result': '{"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_t...</msg>
<status status="PASS" starttime="20190319 01:55:59.218" endtime="20190319 01:55:59.218"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respContentJson['result']}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<msg timestamp="20190319 01:55:59.219" level="INFO">${balance} = {"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000...</msg>
<status status="PASS" starttime="20190319 01:55:59.219" endtime="20190319 01:55:59.219"></status>
</kw>
<msg timestamp="20190319 01:55:59.219" level="INFO">${result} = {"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":4000...</msg>
<status status="PASS" starttime="20190319 01:55:59.205" endtime="20190319 01:55:59.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190319 01:55:59.220" level="INFO">{"total_amount":170000000000,"last_modify_time":862769,"enter_time":862769,"pay_values":[{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":40000000000,"asset":"PTN","address":""},"pay_time":862769},{"pay_tokens":{"amount":140000000000,"asset":"PTN","address":""},"pay_time":862769}],"cashback_values":[{"cashback_address":"P1P6B4yTPttRKktLE958y17NEHfMbJetgZ8","cashback_tokens":{"amount":50000000000,"asset":"PTN","address":""},"role":"Jury","cashback_time":1552985688}],"forfeiture_values":null}</msg>
<status status="PASS" starttime="20190319 01:55:59.220" endtime="20190319 01:55:59.220"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<status status="PASS" starttime="20190319 01:55:59.221" endtime="20190319 01:55:59.221"></status>
</kw>
<status status="PASS" starttime="20190319 01:55:43.052" endtime="20190319 01:55:59.221" critical="yes"></status>
</test>
<status status="PASS" starttime="20190319 01:53:00.807" endtime="20190319 01:55:59.223"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="DepositContractTest">DepositContractTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
