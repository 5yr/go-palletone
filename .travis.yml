os: linux
dist: xenial
sudo: required
language:
    - go
go:
    - 1.10.8
env:
    global:
        - ALL_LOG_PATH="/home/travis/gopath/src/github.com/palletone/go-palletone/bdd/node/log/all.log"
        - BDD_LOG_PATH=/home/travis/gopath/src/github.com/palletone/go-palletone/bdd/logs
        - DEPOSIT_LOG_PATH=/home/travis/gopath/src/github.com/palletone/go-palletone/bdd/dct/log
        - CREATE_TRANS_DIR=createTrans
        - CCINVOKE_DIR=ccinvoke
        - DIGITAL_IDENTITY_DIR=DigitalIdentityCert
        - DEPOSIT_DIR=deposit
        - LOG_NAME=log.html
        - REPORT_NAME=report.html
        - FTP_URL=ftp://${YANGYU}:${PASSWORD}@98.142.130.141/palletone
        - CURL_CMD=curl -T
        - IS_RUN_DEPOSIT=false
        - IS_RUN_CREATE_TRANS=true
        - IS_RUN_CCINVOKE=false
        - IS_RUN_DIGITAL=true

script:
    - go build ./cmd/gptn
    - make gptn
    #- $GOPATH/bin/goveralls -service=travis-ci
    - cp gptn bdd/node
    - cd bdd/node
    - chmod +x gptn
    - python init.py
    - nohup ./gptn &
    - sleep 15
    - netstat -ap | grep gptn
    - if [ $IS_RUN_DEPOSIT == 'true' ]; then
      cd ../dct;
      ./deposit_test.sh 4;
      fi

    - mkdir -p ${BDD_LOG_PATH}
    - if [ $IS_RUN_CREATE_TRANS == 'true' ]; then
      python -m robot.run -d ${BDD_LOG_PATH}/${CREATE_TRANS_DIR} ../testcase/createTrans;
      fi

    - if [ $IS_RUN_CCINVOKE == 'true' ]; then
      python -m robot.run -d ${BDD_LOG_PATH}/${CCINVOKE_DIR} ../testcase/ccinvoke;
      fi

    - if [ $IS_RUN_DIGITAL == 'true' ]; then
      python -m robot.run -d ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR} ../DigitalIdentityCert;
      fi

after_script:
    - killall gptn
    - sleep 2

    # upload all log
    - ${CURL_CMD} ${ALL_LOG_PATH} ftp://${USER}:${PASSWORD}@98.142.130.141/palletone/all.log -v

    # upload deposit log
    - if [ $IS_RUN_DEPOSIT == 'true' ]; then
      ${CURL_CMD} ${DEPOSIT_LOG_PATH}/${LOG_NAME} ${FTP_URL}/${DEPOSIT_DIR}/${LOG_NAME} -v;
      ${CURL_CMD} ${DEPOSIT_LOG_PATH}/${REPORT_NAME} ${FTP_URL}/${DEPOSIT_DIR}/${REPORT_NAME} -v;
      fi

    # upload create transactions log and report
    - if [ $IS_RUN_CREATE_TRANS == 'true' ]; then
      ${CURL_CMD} ${BDD_LOG_PATH}/${CREATE_TRANS_DIR}/${LOG_NAME} ${FTP_URL}/${CREATE_TRANS_DIR}/${LOG_NAME} -v;
      ${CURL_CMD} ${BDD_LOG_PATH}/${CREATE_TRANS_DIR}/${REPORT_NAME} ${FTP_URL}/${CREATE_TRANS_DIR}/${REPORT_NAME} -v;
      fi

    # upload ccinvoke log and report
    - if [ $IS_RUN_CCINVOKE == 'true' ]; then
      ${CURL_CMD} ${BDD_LOG_PATH}/${CCINVOKE_DIR}/${LOG_NAME} ${FTP_URL}/${CCINVOKE_DIR}/${LOG_NAME} -v;
      ${CURL_CMD} ${BDD_LOG_PATH}/${CCINVOKE_DIR}/${REPORT_NAME} ${FTP_URL}/${CCINVOKE_DIR}/${REPORT_NAME} -v;
      fi

    # upload digital identity log and report
    - if [ $IS_RUN_DIGITAL == 'true' ]; then
      echo $BDD_LOG_PATH/$DIGITAL_IDENTITY_DIR/$LOG_NAME;
      echo $FTP_URL/$DIGITAL_IDENTITY_DIR/$LOG_NAME;
      $CURL_CMD $BDD_LOG_PATH/$DIGITAL_IDENTITY_DIR/$LOG_NAME $FTP_URL/$DIGITAL_IDENTITY_DIR/$LOG_NAME -v;
      ${CURL_CMD} ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR}/${REPORT_NAME} ${FTP_URL}/${DIGITAL_IDENTITY_DIR}/${REPORT_NAME} -v;
      fi

    # echo ftp address
    - echo "The path of all bdd log in vsftpd is 'ftp://98.142.130.141', but you should quit VPN first"

before_install:
    - go get github.com/mattn/goveralls
    - go get -u github.com/palletone/adaptor
    - go get -u github.com/palletone/btc-adaptor
    - go get -u github.com/palletone/eth-adaptor
    - go get -u github.com/palletone/digital-identity/...
    - source ./gomockgen.sh

install:
    - python -V
    - whereis python
    - which python
    - sudo -H pip install --upgrade pip
    - sudo -H pip install robotframework==2.8.5
    - sudo -H pip install requests
    - sudo -H pip install robotframework-requests
    - sudo -H pip install demjson
    - sudo -H pip install pexpect
    - sudo -H apt-get install expect
    #- sudo -H apt-get install jq tcl tk

addons:
    apt:
        update: true

deploy:
    skip_cleanup: true
    provider:
    on:
        branch: certbdd

notifications:
#    email: elva1087penny@163.com
    email:
        recipients:
            - 602554102@qq.com
        on_success: always # default: change
        on_failure: always