os: linux
dist: xenial
sudo: required
language:
    - go
go:
    - 1.10.8
env:
    global:
        - ALL_LOG_PATH=/home/travis/gopath/src/github.com/palletone/go-palletone/bdd/node/log/all.log
        - BDD_LOG_PATH=/home/travis/gopath/src/github.com/palletone/go-palletone/bdd/logs
        - CREATE_TRANS_DIR=createTrans
        - CCINVOKE_DIR=ccinvoke
        - DIGITAL_IDENTITY_DIR=DigitalIdentityCert
        - FTP_SERVER_IP=98.142.130.141
        - 'SFTP_KEY=[base64-encoded-rsa-key]'

script:
    - go build ./cmd/gptn
    - make gptn
    #- $GOPATH/bin/goveralls -service=travis-ci
    - cp gptn bdd/node
    - cd bdd/node
    - chmod +x gptn
    - python init.py
    - nohup ./gptn &
    - sleep 15
    - netstat -ap | grep gptn
    - cd ../dct
    - mkdir -p ${BDD_LOG_PATH}
#    - ./deposit_test.sh 4 > BDD_LOG_PATH/deposit_test.log
    - python -m robot.run -d ${BDD_LOG_PATH}/${CREATE_TRANS_DIR} ../testcase/createTrans
#    - python -m robot.run -d ${BDD_LOG_PATH}/${CCINVOKE_DIR} ../testcase/ccinvoke
#    - python -m robot.run -d ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR} ../DigitalIdentityCert


after_success:
    - killall gptn
    - echo "${SFTP_KEY}" | base64 --decode >/tmp/sftp_rsa
    - curl --ftp-create-dirs
        -T ${BDD_LOG_PATH}/${CREATE_TRANS_DIR}/log.html
        --key /tmp/sftp_rsa
        --ftp-port -
        ftp://${YANGYU}:${PASSWORD}@98.142.130.141/yy/log.html -v

after_failure:
    - killall gptns

before_install:
    - go get github.com/mattn/goveralls
    - go get -u github.com/palletone/adaptor
    - go get -u github.com/palletone/btc-adaptor
    - go get -u github.com/palletone/eth-adaptor
    - go get -u github.com/palletone/digital-identity/...
    - source ./gomockgen.sh

install:
    - python -V
    - whereis python
    - which python
    - sudo -H pip install --upgrade pip
    - sudo -H pip install robotframework==2.8.5
    - sudo -H pip install requests
    - sudo -H pip install robotframework-requests
    - sudo -H pip install demjson
    - sudo -H pip install pexpect
    - sudo -H apt-get install expect
    #- sudo -H apt-get install jq tcl tk

addons:
    apt:
        update: true

deploy:
    skip_cleanup: true
#    on:
#        branch: certbdd

notifications:
    email: 602554102@qq.com
    email:
        recipients:
            - 602554102@qq.com
        on_success: always # default: change
        on_failure: always

