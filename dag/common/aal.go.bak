/*
 *
 *    This file is part of go-palletone.
 *    go-palletone is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *    go-palletone is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *    You should have received a copy of the GNU General Public License
 *    along with go-palletone.  If not, see <http://www.gnu.org/licenses/>.
 * /
 *
 *  * @author PalletOne core developer <dev@pallet.one>
 *  * @date 2018
 *
 */

package common

import (
	"github.com/palletone/go-palletone/common"
	asset2 "github.com/palletone/go-palletone/dag/asset"
	"github.com/palletone/go-palletone/dag/modules"
	"github.com/palletone/go-palletone/dag/storage"
)

//Account abstraction layer repository
type IAalRepository interface {
	GetAssetBalance(address common.Address, asset *modules.Asset) uint64
	GetBalance(address common.Address) map[modules.Asset]uint64
}
type AalRepository struct {
	utxodb  IUtxoRepository
	statedb storage.StateDb
}

func NewAalRepository(utxoRep IUtxoRepository, statedb storage.StateDb) *AalRepository {
	return &AalRepository{utxodb: utxoRep, statedb: statedb}
}
func (rep *AalRepository) GetAssetBalance(address common.Address, asset *modules.Asset) uint64 {
	info, err := rep.statedb.GetAddressInfo(address)
	if err != nil { //Don't have address info in statedb
		ptn := asset2.PTN()
		tokens:= rep.utxodb.GetAccountTokens(address)
		tokens["PTN"]
	}
}
func (rep *AalRepository) GetBalance(address common.Address) map[modules.Asset]uint64 {

}
